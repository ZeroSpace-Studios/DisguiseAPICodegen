/**
 * d3 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIRenderStreamApi.h"

#include "OpenAPID3apiEmptyResponse.h"
#include "OpenAPIRenderstreamFailoverRequest.h"
#include "OpenAPIRenderstreamGetAssignersResponse.h"
#include "OpenAPIRenderstreamGetLayerConfigResponse.h"
#include "OpenAPIRenderstreamGetLayerStatusResponse.h"
#include "OpenAPIRenderstreamGetLayersResponse.h"
#include "OpenAPIRenderstreamGetPoolsResponse.h"
#include "OpenAPIRenderstreamRestartLayersRequest.h"
#include "OpenAPIRenderstreamStartLayersRequest.h"
#include "OpenAPIRenderstreamStopLayersRequest.h"
#include "OpenAPIRenderstreamSyncLayersRequest.h"

namespace OpenAPI
{

/* Fail over a single machine

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamFailoverRequest : public Request
{
public:
    virtual ~RenderStreamFailoverRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIRenderstreamFailoverRequest Body;
};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamFailoverResponse : public Response
{
public:
    virtual ~RenderStreamFailoverResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Returns the RenderStream assigners list

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetAssignersRequest : public Request
{
public:
    virtual ~RenderStreamGetAssignersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetAssignersResponse : public Response
{
public:
    virtual ~RenderStreamGetAssignersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRenderstreamGetAssignersResponse Content;
};

/* Returns config information for the selected layer

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetLayerConfigRequest : public Request
{
public:
    virtual ~RenderStreamGetLayerConfigRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier. */
	TOptional<FString> Uid;
	/* Unqualified name. */
	TOptional<FString> Name;
};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetLayerConfigResponse : public Response
{
public:
    virtual ~RenderStreamGetLayerConfigResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRenderstreamGetLayerConfigResponse Content;
};

/* Returns status information for the selected layer

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetLayerStatusRequest : public Request
{
public:
    virtual ~RenderStreamGetLayerStatusRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier. */
	TOptional<FString> Uid;
	/* Unqualified name. */
	TOptional<FString> Name;
};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetLayerStatusResponse : public Response
{
public:
    virtual ~RenderStreamGetLayerStatusResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRenderstreamGetLayerStatusResponse Content;
};

/* Returns the RenderStream layer list

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetLayersRequest : public Request
{
public:
    virtual ~RenderStreamGetLayersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetLayersResponse : public Response
{
public:
    virtual ~RenderStreamGetLayersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRenderstreamGetLayersResponse Content;
};

/* Returns the RenderStream pools list

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetPoolsRequest : public Request
{
public:
    virtual ~RenderStreamGetPoolsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamGetPoolsResponse : public Response
{
public:
    virtual ~RenderStreamGetPoolsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRenderstreamGetPoolsResponse Content;
};

/* Restarts a workload for the selected layer

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamRestartLayersRequest : public Request
{
public:
    virtual ~RenderStreamRestartLayersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIRenderstreamRestartLayersRequest Body;
};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamRestartLayersResponse : public Response
{
public:
    virtual ~RenderStreamRestartLayersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Starts a workload for the selected layer

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamStartLayersRequest : public Request
{
public:
    virtual ~RenderStreamStartLayersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIRenderstreamStartLayersRequest Body;
};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamStartLayersResponse : public Response
{
public:
    virtual ~RenderStreamStartLayersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Stops a workload for the selected layer

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamStopLayersRequest : public Request
{
public:
    virtual ~RenderStreamStopLayersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIRenderstreamStopLayersRequest Body;
};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamStopLayersResponse : public Response
{
public:
    virtual ~RenderStreamStopLayersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Syncs a workload for the selected layer

*/
class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamSyncLayersRequest : public Request
{
public:
    virtual ~RenderStreamSyncLayersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIRenderstreamSyncLayersRequest Body;
};

class OPENAPI_API OpenAPIRenderStreamApi::RenderStreamSyncLayersResponse : public Response
{
public:
    virtual ~RenderStreamSyncLayersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

}
