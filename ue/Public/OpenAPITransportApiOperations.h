/**
 * d3 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPITransportApi.h"

#include "OpenAPID3apiEmptyResponse.h"
#include "OpenAPITransportGetActiveTransportResponse.h"
#include "OpenAPITransportGoToFrameRequest.h"
#include "OpenAPITransportGoToNextSectionRequest.h"
#include "OpenAPITransportGoToNextTrackRequest.h"
#include "OpenAPITransportGoToNoteRequest.h"
#include "OpenAPITransportGoToPrevSectionRequest.h"
#include "OpenAPITransportGoToPrevTrackRequest.h"
#include "OpenAPITransportGoToSectionRequest.h"
#include "OpenAPITransportGoToTagRequest.h"
#include "OpenAPITransportGoToTimeCodeRequest.h"
#include "OpenAPITransportGoToTimeRequest.h"
#include "OpenAPITransportGoToTrackRequest.h"
#include "OpenAPITransportListAnnotationsResponse.h"
#include "OpenAPITransportListSetListsResponse.h"
#include "OpenAPITransportListTracksResponse.h"
#include "OpenAPITransportPlayLoopSectionRequest.h"
#include "OpenAPITransportPlayRequest.h"
#include "OpenAPITransportPlaySectionRequest.h"
#include "OpenAPITransportReturnToStartRequest.h"
#include "OpenAPITransportSetBrightnessRequest.h"
#include "OpenAPITransportSetEngagedRequest.h"
#include "OpenAPITransportSetVolumeRequest.h"
#include "OpenAPITransportStopRequest.h"

namespace OpenAPI
{

/* Get the active transport in the project. This is the transport selected in the d3State bar.

*/
class OPENAPI_API OpenAPITransportApi::TransportGetActiveTransportsRequest : public Request
{
public:
    virtual ~TransportGetActiveTransportsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPITransportApi::TransportGetActiveTransportsResponse : public Response
{
public:
    virtual ~TransportGetActiveTransportsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPITransportGetActiveTransportResponse Content;
};

/* Jump to the specific frame

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToFrameRequest : public Request
{
public:
    virtual ~TransportGoToFrameRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToFrameRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToFrameResponse : public Response
{
public:
    virtual ~TransportGoToFrameResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to the next section of the current track

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToNextSectionRequest : public Request
{
public:
    virtual ~TransportGoToNextSectionRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToNextSectionRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToNextSectionResponse : public Response
{
public:
    virtual ~TransportGoToNextSectionResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to the start of the next track

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToNextTrackRequest : public Request
{
public:
    virtual ~TransportGoToNextTrackRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToNextTrackRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToNextTrackResponse : public Response
{
public:
    virtual ~TransportGoToNextTrackResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to a given note on a given transport

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToNoteRequest : public Request
{
public:
    virtual ~TransportGoToNoteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToNoteRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToNoteResponse : public Response
{
public:
    virtual ~TransportGoToNoteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to the previous section of the current track

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToPrevSectionRequest : public Request
{
public:
    virtual ~TransportGoToPrevSectionRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToPrevSectionRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToPrevSectionResponse : public Response
{
public:
    virtual ~TransportGoToPrevSectionResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to the start of the previous track

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToPrevTrackRequest : public Request
{
public:
    virtual ~TransportGoToPrevTrackRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToPrevTrackRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToPrevTrackResponse : public Response
{
public:
    virtual ~TransportGoToPrevTrackResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to a given section on a given transport

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToSectionRequest : public Request
{
public:
    virtual ~TransportGoToSectionRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToSectionRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToSectionResponse : public Response
{
public:
    virtual ~TransportGoToSectionResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to a given tag on a given transport

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToTagRequest : public Request
{
public:
    virtual ~TransportGoToTagRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToTagRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToTagResponse : public Response
{
public:
    virtual ~TransportGoToTagResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to the specific time

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToTimeRequest : public Request
{
public:
    virtual ~TransportGoToTimeRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToTimeRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToTimeResponse : public Response
{
public:
    virtual ~TransportGoToTimeResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to a given time on a given transport

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToTimeCodeRequest : public Request
{
public:
    virtual ~TransportGoToTimeCodeRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToTimeCodeRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToTimeCodeResponse : public Response
{
public:
    virtual ~TransportGoToTimeCodeResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Jump to the start of the given track

*/
class OPENAPI_API OpenAPITransportApi::TransportGoToTrackRequest : public Request
{
public:
    virtual ~TransportGoToTrackRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportGoToTrackRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportGoToTrackResponse : public Response
{
public:
    virtual ~TransportGoToTrackResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* List all annotations in the given Track

*/
class OPENAPI_API OpenAPITransportApi::TransportListAnnotationsRequest : public Request
{
public:
    virtual ~TransportListAnnotationsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* UID of the Track. */
	TOptional<FString> Uid;
	/* Name of the Track. */
	TOptional<FString> Name;
};

class OPENAPI_API OpenAPITransportApi::TransportListAnnotationsResponse : public Response
{
public:
    virtual ~TransportListAnnotationsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPITransportListAnnotationsResponse Content;
};

/* List all SetLists in the project

*/
class OPENAPI_API OpenAPITransportApi::TransportListSetListsRequest : public Request
{
public:
    virtual ~TransportListSetListsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPITransportApi::TransportListSetListsResponse : public Response
{
public:
    virtual ~TransportListSetListsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPITransportListSetListsResponse Content;
};

/* List all tracks in the project

*/
class OPENAPI_API OpenAPITransportApi::TransportListTracksRequest : public Request
{
public:
    virtual ~TransportListTracksRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPITransportApi::TransportListTracksResponse : public Response
{
public:
    virtual ~TransportListTracksResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPITransportListTracksResponse Content;
};

/* Play a transport (sets playmode to &#39;play&#39;)

*/
class OPENAPI_API OpenAPITransportApi::TransportPlayRequest : public Request
{
public:
    virtual ~TransportPlayRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportPlayRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportPlayResponse : public Response
{
public:
    virtual ~TransportPlayResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Loop a section on a transport (sets playmode to &#39;loop section&#39;)

*/
class OPENAPI_API OpenAPITransportApi::TransportPlayLoopSectionRequest : public Request
{
public:
    virtual ~TransportPlayLoopSectionRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportPlayLoopSectionRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportPlayLoopSectionResponse : public Response
{
public:
    virtual ~TransportPlayLoopSectionResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Play a section on a transport (sets playmode to &#39;play to end of section&#39;)

*/
class OPENAPI_API OpenAPITransportApi::TransportPlaySectionRequest : public Request
{
public:
    virtual ~TransportPlaySectionRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportPlaySectionRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportPlaySectionResponse : public Response
{
public:
    virtual ~TransportPlaySectionResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Return to start of a transport

*/
class OPENAPI_API OpenAPITransportApi::TransportReturnToStartRequest : public Request
{
public:
    virtual ~TransportReturnToStartRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportReturnToStartRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportReturnToStartResponse : public Response
{
public:
    virtual ~TransportReturnToStartResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Set the brightness of the specified transport manager&#39;s current transport

*/
class OPENAPI_API OpenAPITransportApi::TransportSetBrightnessRequest : public Request
{
public:
    virtual ~TransportSetBrightnessRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportSetBrightnessRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportSetBrightnessResponse : public Response
{
public:
    virtual ~TransportSetBrightnessResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Set the engaged status of the current transport

*/
class OPENAPI_API OpenAPITransportApi::TransportSetEngagedRequest : public Request
{
public:
    virtual ~TransportSetEngagedRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportSetEngagedRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportSetEngagedResponse : public Response
{
public:
    virtual ~TransportSetEngagedResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Set the volume of the current transport

*/
class OPENAPI_API OpenAPITransportApi::TransportSetVolumeRequest : public Request
{
public:
    virtual ~TransportSetVolumeRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportSetVolumeRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportSetVolumeResponse : public Response
{
public:
    virtual ~TransportSetVolumeResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

/* Stop a transport

*/
class OPENAPI_API OpenAPITransportApi::TransportStopRequest : public Request
{
public:
    virtual ~TransportStopRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPITransportStopRequest Body;
};

class OPENAPI_API OpenAPITransportApi::TransportStopResponse : public Response
{
public:
    virtual ~TransportStopResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPID3apiEmptyResponse Content;
};

}
