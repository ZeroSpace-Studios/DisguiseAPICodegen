/**
 * d3 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIStatusD3VersionInfo.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIStatusD3VersionInfo::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Major.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("major")); WriteJsonValue(Writer, Major.GetValue());
	}
	if (Minor.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("minor")); WriteJsonValue(Writer, Minor.GetValue());
	}
	if (Hotfix.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotfix")); WriteJsonValue(Writer, Hotfix.GetValue());
	}
	if (Revision.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("revision")); WriteJsonValue(Writer, Revision.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIStatusD3VersionInfo::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("major"), Major);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("minor"), Minor);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotfix"), Hotfix);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("revision"), Revision);

	return ParseSuccess;
}

}
