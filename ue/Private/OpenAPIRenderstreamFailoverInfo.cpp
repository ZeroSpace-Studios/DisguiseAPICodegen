/**
 * d3 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIRenderstreamFailoverInfo.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIRenderstreamFailoverInfo::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (WorkloadID.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("workloadID")); WriteJsonValue(Writer, WorkloadID.GetValue());
	}
	if (FailedInstanceIndex.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("failedInstanceIndex")); WriteJsonValue(Writer, FailedInstanceIndex.GetValue());
	}
	if (CoveringInstanceIndex.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("coveringInstanceIndex")); WriteJsonValue(Writer, CoveringInstanceIndex.GetValue());
	}
	if (CoveringMachineName.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("coveringMachineName")); WriteJsonValue(Writer, CoveringMachineName.GetValue());
	}
	if (ErrorString.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("errorString")); WriteJsonValue(Writer, ErrorString.GetValue());
	}
	if (Streams.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("streams")); WriteJsonValue(Writer, Streams.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIRenderstreamFailoverInfo::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("workloadID"), WorkloadID);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("failedInstanceIndex"), FailedInstanceIndex);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("coveringInstanceIndex"), CoveringInstanceIndex);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("coveringMachineName"), CoveringMachineName);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("errorString"), ErrorString);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("streams"), Streams);

	return ParseSuccess;
}

}
