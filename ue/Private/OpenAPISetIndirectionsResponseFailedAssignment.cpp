/**
 * d3 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPISetIndirectionsResponseFailedAssignment.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPISetIndirectionsResponseFailedAssignment::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Uid.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("uid")); WriteJsonValue(Writer, Uid.GetValue());
	}
	if (ResourceIndex.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("resourceIndex")); WriteJsonValue(Writer, ResourceIndex.GetValue());
	}
	if (ResourceUid.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("resourceUid")); WriteJsonValue(Writer, ResourceUid.GetValue());
	}
	if (Error.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("error")); WriteJsonValue(Writer, Error.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPISetIndirectionsResponseFailedAssignment::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("uid"), Uid);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("resourceIndex"), ResourceIndex);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("resourceUid"), ResourceUid);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("error"), Error);

	return ParseSuccess;
}

}
