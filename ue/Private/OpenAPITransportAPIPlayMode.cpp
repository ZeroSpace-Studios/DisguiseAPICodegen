/**
 * d3 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPITransportAPIPlayMode.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPITransportAPIPlayMode::Values& Value)
{
	switch (Value)
	{
	case OpenAPITransportAPIPlayMode::Values::NotSet:
		return TEXT("NotSet");
	case OpenAPITransportAPIPlayMode::Values::Play:
		return TEXT("Play");
	case OpenAPITransportAPIPlayMode::Values::PlaySection:
		return TEXT("PlaySection");
	case OpenAPITransportAPIPlayMode::Values::Loop:
		return TEXT("Loop");
	case OpenAPITransportAPIPlayMode::Values::Stop:
		return TEXT("Stop");
	case OpenAPITransportAPIPlayMode::Values::Unknown:
		return TEXT("Unknown");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPITransportAPIPlayMode::Values Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPITransportAPIPlayMode::EnumToString(const OpenAPITransportAPIPlayMode::Values& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPITransportAPIPlayMode::Values& Value)
{
	static TMap<FString, OpenAPITransportAPIPlayMode::Values> StringToEnum = { 
		{ TEXT("NotSet"), OpenAPITransportAPIPlayMode::Values::NotSet },
		{ TEXT("Play"), OpenAPITransportAPIPlayMode::Values::Play },
		{ TEXT("PlaySection"), OpenAPITransportAPIPlayMode::Values::PlaySection },
		{ TEXT("Loop"), OpenAPITransportAPIPlayMode::Values::Loop },
		{ TEXT("Stop"), OpenAPITransportAPIPlayMode::Values::Stop },
		{ TEXT("Unknown"), OpenAPITransportAPIPlayMode::Values::Unknown }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPITransportAPIPlayMode::EnumFromString(const FString& EnumAsString, OpenAPITransportAPIPlayMode::Values& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline FStringFormatArg ToStringFormatArg(const OpenAPITransportAPIPlayMode::Values& Value)
{
	return FStringFormatArg(ToString(Value));
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPITransportAPIPlayMode::Values& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPITransportAPIPlayMode::Values& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPITransportAPIPlayMode::WriteJson(JsonWriter& Writer) const
{
	WriteJsonValue(Writer, Value);
}

bool OpenAPITransportAPIPlayMode::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Value);
}

}
