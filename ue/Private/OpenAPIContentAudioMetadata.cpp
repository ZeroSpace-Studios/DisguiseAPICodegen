/**
 * d3 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIContentAudioMetadata.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIContentAudioMetadata::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (SampleRate.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("sampleRate")); WriteJsonValue(Writer, SampleRate.GetValue());
	}
	if (NChannels.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("nChannels")); WriteJsonValue(Writer, NChannels.GetValue());
	}
	if (NSamples.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("nSamples")); WriteJsonValue(Writer, NSamples.GetValue());
	}
	if (CodecName.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("codecName")); WriteJsonValue(Writer, CodecName.GetValue());
	}
	if (CodecInfo.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("codecInfo")); WriteJsonValue(Writer, CodecInfo.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIContentAudioMetadata::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("sampleRate"), SampleRate);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("nChannels"), NChannels);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("nSamples"), NSamples);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("codecName"), CodecName);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("codecInfo"), CodecInfo);

	return ParseSuccess;
}

}
