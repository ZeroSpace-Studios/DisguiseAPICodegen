/**
 * d3 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIRenderstreamWorkloadInfo.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIRenderstreamWorkloadInfo::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Id.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id.GetValue());
	}
	if (FriendlyName.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("friendlyName")); WriteJsonValue(Writer, FriendlyName.GetValue());
	}
	if (Asset.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("asset")); WriteJsonValue(Writer, Asset.GetValue());
	}
	if (Status.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("status")); WriteJsonValue(Writer, Status.GetValue());
	}
	if (Instances.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("instances")); WriteJsonValue(Writer, Instances.GetValue());
	}
	if (EngineSync.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("engineSync")); WriteJsonValue(Writer, EngineSync.GetValue());
	}
	if (LayerUID.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("layerUID")); WriteJsonValue(Writer, LayerUID.GetValue());
	}
	if (LocationDescription.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("locationDescription")); WriteJsonValue(Writer, LocationDescription.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIRenderstreamWorkloadInfo::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("friendlyName"), FriendlyName);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("asset"), Asset);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("status"), Status);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("instances"), Instances);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("engineSync"), EngineSync);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("layerUID"), LayerUID);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("locationDescription"), LocationDescription);

	return ParseSuccess;
}

}
