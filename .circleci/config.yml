# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  generate-python:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: python:3.9
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Install Dependencies" 
          command: apt update -y && apt install -y openjdk-11-jre
      - run:
          name: "Generate Code"
          command: java -jar ./openapi-generator-cli.jar generate -i ./cameracalibration.swagger.json -g python -o ./python
      - run:
          name: "Commit"
          command: |
                    git config credential.helper cache
                    git config user.email "<some verified email>"
                    git config user.name "Github Bot"
                    git add .
                    git commit -m "Automated Build [skip ci]"
                    git push

  generate-go:
    docker:
      - image: golang
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: apt update -y && apt install -y openjdk-11-jre
      - run:
          name: "Generate Code"
          command: java -jar ./openapi-generator-cli.jar generate -i ./cameracalibration.swagger.json -g go -o ./go
      - run:
          name: "Commit"
          command: |
                    git config credential.helper cache
                    git config user.email "<some verified email>"
                    git config user.name "Github Bot"
                    git add .
                    git commit -m "Automated Build [skip ci]"
                    git push

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  Generate:
    jobs:
      - generate-python
