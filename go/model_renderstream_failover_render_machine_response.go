/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamFailoverRenderMachineResponse struct for RenderstreamFailoverRenderMachineResponse
type RenderstreamFailoverRenderMachineResponse struct {
	AllInstancesFailedover *bool `json:"allInstancesFailedover,omitempty"`
	FailoverMappings *[]RenderstreamFailoverInfo `json:"failoverMappings,omitempty"`
}

// NewRenderstreamFailoverRenderMachineResponse instantiates a new RenderstreamFailoverRenderMachineResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamFailoverRenderMachineResponse() *RenderstreamFailoverRenderMachineResponse {
	this := RenderstreamFailoverRenderMachineResponse{}
	return &this
}

// NewRenderstreamFailoverRenderMachineResponseWithDefaults instantiates a new RenderstreamFailoverRenderMachineResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamFailoverRenderMachineResponseWithDefaults() *RenderstreamFailoverRenderMachineResponse {
	this := RenderstreamFailoverRenderMachineResponse{}
	return &this
}

// GetAllInstancesFailedover returns the AllInstancesFailedover field value if set, zero value otherwise.
func (o *RenderstreamFailoverRenderMachineResponse) GetAllInstancesFailedover() bool {
	if o == nil || o.AllInstancesFailedover == nil {
		var ret bool
		return ret
	}
	return *o.AllInstancesFailedover
}

// GetAllInstancesFailedoverOk returns a tuple with the AllInstancesFailedover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverRenderMachineResponse) GetAllInstancesFailedoverOk() (*bool, bool) {
	if o == nil || o.AllInstancesFailedover == nil {
		return nil, false
	}
	return o.AllInstancesFailedover, true
}

// HasAllInstancesFailedover returns a boolean if a field has been set.
func (o *RenderstreamFailoverRenderMachineResponse) HasAllInstancesFailedover() bool {
	if o != nil && o.AllInstancesFailedover != nil {
		return true
	}

	return false
}

// SetAllInstancesFailedover gets a reference to the given bool and assigns it to the AllInstancesFailedover field.
func (o *RenderstreamFailoverRenderMachineResponse) SetAllInstancesFailedover(v bool) {
	o.AllInstancesFailedover = &v
}

// GetFailoverMappings returns the FailoverMappings field value if set, zero value otherwise.
func (o *RenderstreamFailoverRenderMachineResponse) GetFailoverMappings() []RenderstreamFailoverInfo {
	if o == nil || o.FailoverMappings == nil {
		var ret []RenderstreamFailoverInfo
		return ret
	}
	return *o.FailoverMappings
}

// GetFailoverMappingsOk returns a tuple with the FailoverMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverRenderMachineResponse) GetFailoverMappingsOk() (*[]RenderstreamFailoverInfo, bool) {
	if o == nil || o.FailoverMappings == nil {
		return nil, false
	}
	return o.FailoverMappings, true
}

// HasFailoverMappings returns a boolean if a field has been set.
func (o *RenderstreamFailoverRenderMachineResponse) HasFailoverMappings() bool {
	if o != nil && o.FailoverMappings != nil {
		return true
	}

	return false
}

// SetFailoverMappings gets a reference to the given []RenderstreamFailoverInfo and assigns it to the FailoverMappings field.
func (o *RenderstreamFailoverRenderMachineResponse) SetFailoverMappings(v []RenderstreamFailoverInfo) {
	o.FailoverMappings = &v
}

func (o RenderstreamFailoverRenderMachineResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllInstancesFailedover != nil {
		toSerialize["allInstancesFailedover"] = o.AllInstancesFailedover
	}
	if o.FailoverMappings != nil {
		toSerialize["failoverMappings"] = o.FailoverMappings
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamFailoverRenderMachineResponse struct {
	value *RenderstreamFailoverRenderMachineResponse
	isSet bool
}

func (v NullableRenderstreamFailoverRenderMachineResponse) Get() *RenderstreamFailoverRenderMachineResponse {
	return v.value
}

func (v *NullableRenderstreamFailoverRenderMachineResponse) Set(val *RenderstreamFailoverRenderMachineResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamFailoverRenderMachineResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamFailoverRenderMachineResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamFailoverRenderMachineResponse(val *RenderstreamFailoverRenderMachineResponse) *NullableRenderstreamFailoverRenderMachineResponse {
	return &NullableRenderstreamFailoverRenderMachineResponse{value: val, isSet: true}
}

func (v NullableRenderstreamFailoverRenderMachineResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamFailoverRenderMachineResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


