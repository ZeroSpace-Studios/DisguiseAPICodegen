/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatusMachineInfo struct for StatusMachineInfo
type StatusMachineInfo struct {
	Uid *string `json:"uid,omitempty"`
	Name *string `json:"name,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Type *MachineInfoMachineType `json:"type,omitempty"`
}

// NewStatusMachineInfo instantiates a new StatusMachineInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusMachineInfo() *StatusMachineInfo {
	this := StatusMachineInfo{}
	var type_ MachineInfoMachineType = UNKNOWN
	this.Type = &type_
	return &this
}

// NewStatusMachineInfoWithDefaults instantiates a new StatusMachineInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusMachineInfoWithDefaults() *StatusMachineInfo {
	this := StatusMachineInfo{}
	var type_ MachineInfoMachineType = UNKNOWN
	this.Type = &type_
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *StatusMachineInfo) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMachineInfo) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *StatusMachineInfo) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *StatusMachineInfo) SetUid(v string) {
	o.Uid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StatusMachineInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMachineInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StatusMachineInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StatusMachineInfo) SetName(v string) {
	o.Name = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *StatusMachineInfo) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMachineInfo) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *StatusMachineInfo) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *StatusMachineInfo) SetHostname(v string) {
	o.Hostname = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StatusMachineInfo) GetType() MachineInfoMachineType {
	if o == nil || o.Type == nil {
		var ret MachineInfoMachineType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMachineInfo) GetTypeOk() (*MachineInfoMachineType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StatusMachineInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given MachineInfoMachineType and assigns it to the Type field.
func (o *StatusMachineInfo) SetType(v MachineInfoMachineType) {
	o.Type = &v
}

func (o StatusMachineInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableStatusMachineInfo struct {
	value *StatusMachineInfo
	isSet bool
}

func (v NullableStatusMachineInfo) Get() *StatusMachineInfo {
	return v.value
}

func (v *NullableStatusMachineInfo) Set(val *StatusMachineInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusMachineInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusMachineInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusMachineInfo(val *StatusMachineInfo) *NullableStatusMachineInfo {
	return &NullableStatusMachineInfo{value: val, isSet: true}
}

func (v NullableStatusMachineInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusMachineInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


