/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamFailoverRequest struct for RenderstreamFailoverRequest
type RenderstreamFailoverRequest struct {
	Machine *D3apiLocator `json:"machine,omitempty"`
}

// NewRenderstreamFailoverRequest instantiates a new RenderstreamFailoverRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamFailoverRequest() *RenderstreamFailoverRequest {
	this := RenderstreamFailoverRequest{}
	return &this
}

// NewRenderstreamFailoverRequestWithDefaults instantiates a new RenderstreamFailoverRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamFailoverRequestWithDefaults() *RenderstreamFailoverRequest {
	this := RenderstreamFailoverRequest{}
	return &this
}

// GetMachine returns the Machine field value if set, zero value otherwise.
func (o *RenderstreamFailoverRequest) GetMachine() D3apiLocator {
	if o == nil || o.Machine == nil {
		var ret D3apiLocator
		return ret
	}
	return *o.Machine
}

// GetMachineOk returns a tuple with the Machine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverRequest) GetMachineOk() (*D3apiLocator, bool) {
	if o == nil || o.Machine == nil {
		return nil, false
	}
	return o.Machine, true
}

// HasMachine returns a boolean if a field has been set.
func (o *RenderstreamFailoverRequest) HasMachine() bool {
	if o != nil && o.Machine != nil {
		return true
	}

	return false
}

// SetMachine gets a reference to the given D3apiLocator and assigns it to the Machine field.
func (o *RenderstreamFailoverRequest) SetMachine(v D3apiLocator) {
	o.Machine = &v
}

func (o RenderstreamFailoverRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Machine != nil {
		toSerialize["machine"] = o.Machine
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamFailoverRequest struct {
	value *RenderstreamFailoverRequest
	isSet bool
}

func (v NullableRenderstreamFailoverRequest) Get() *RenderstreamFailoverRequest {
	return v.value
}

func (v *NullableRenderstreamFailoverRequest) Set(val *RenderstreamFailoverRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamFailoverRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamFailoverRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamFailoverRequest(val *RenderstreamFailoverRequest) *NullableRenderstreamFailoverRequest {
	return &NullableRenderstreamFailoverRequest{value: val, isSet: true}
}

func (v NullableRenderstreamFailoverRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamFailoverRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


