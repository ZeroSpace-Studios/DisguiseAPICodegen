/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContentMediaMetadata struct for ContentMediaMetadata
type ContentMediaMetadata struct {
	Uid *string `json:"uid,omitempty"`
	VideoMetadata *ContentVideoMetadata `json:"videoMetadata,omitempty"`
	AudioMetadata *ContentAudioMetadata `json:"audioMetadata,omitempty"`
	MeshMetadata *ContentMeshMetadata `json:"meshMetadata,omitempty"`
}

// NewContentMediaMetadata instantiates a new ContentMediaMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentMediaMetadata() *ContentMediaMetadata {
	this := ContentMediaMetadata{}
	return &this
}

// NewContentMediaMetadataWithDefaults instantiates a new ContentMediaMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentMediaMetadataWithDefaults() *ContentMediaMetadata {
	this := ContentMediaMetadata{}
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *ContentMediaMetadata) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMediaMetadata) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *ContentMediaMetadata) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *ContentMediaMetadata) SetUid(v string) {
	o.Uid = &v
}

// GetVideoMetadata returns the VideoMetadata field value if set, zero value otherwise.
func (o *ContentMediaMetadata) GetVideoMetadata() ContentVideoMetadata {
	if o == nil || o.VideoMetadata == nil {
		var ret ContentVideoMetadata
		return ret
	}
	return *o.VideoMetadata
}

// GetVideoMetadataOk returns a tuple with the VideoMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMediaMetadata) GetVideoMetadataOk() (*ContentVideoMetadata, bool) {
	if o == nil || o.VideoMetadata == nil {
		return nil, false
	}
	return o.VideoMetadata, true
}

// HasVideoMetadata returns a boolean if a field has been set.
func (o *ContentMediaMetadata) HasVideoMetadata() bool {
	if o != nil && o.VideoMetadata != nil {
		return true
	}

	return false
}

// SetVideoMetadata gets a reference to the given ContentVideoMetadata and assigns it to the VideoMetadata field.
func (o *ContentMediaMetadata) SetVideoMetadata(v ContentVideoMetadata) {
	o.VideoMetadata = &v
}

// GetAudioMetadata returns the AudioMetadata field value if set, zero value otherwise.
func (o *ContentMediaMetadata) GetAudioMetadata() ContentAudioMetadata {
	if o == nil || o.AudioMetadata == nil {
		var ret ContentAudioMetadata
		return ret
	}
	return *o.AudioMetadata
}

// GetAudioMetadataOk returns a tuple with the AudioMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMediaMetadata) GetAudioMetadataOk() (*ContentAudioMetadata, bool) {
	if o == nil || o.AudioMetadata == nil {
		return nil, false
	}
	return o.AudioMetadata, true
}

// HasAudioMetadata returns a boolean if a field has been set.
func (o *ContentMediaMetadata) HasAudioMetadata() bool {
	if o != nil && o.AudioMetadata != nil {
		return true
	}

	return false
}

// SetAudioMetadata gets a reference to the given ContentAudioMetadata and assigns it to the AudioMetadata field.
func (o *ContentMediaMetadata) SetAudioMetadata(v ContentAudioMetadata) {
	o.AudioMetadata = &v
}

// GetMeshMetadata returns the MeshMetadata field value if set, zero value otherwise.
func (o *ContentMediaMetadata) GetMeshMetadata() ContentMeshMetadata {
	if o == nil || o.MeshMetadata == nil {
		var ret ContentMeshMetadata
		return ret
	}
	return *o.MeshMetadata
}

// GetMeshMetadataOk returns a tuple with the MeshMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMediaMetadata) GetMeshMetadataOk() (*ContentMeshMetadata, bool) {
	if o == nil || o.MeshMetadata == nil {
		return nil, false
	}
	return o.MeshMetadata, true
}

// HasMeshMetadata returns a boolean if a field has been set.
func (o *ContentMediaMetadata) HasMeshMetadata() bool {
	if o != nil && o.MeshMetadata != nil {
		return true
	}

	return false
}

// SetMeshMetadata gets a reference to the given ContentMeshMetadata and assigns it to the MeshMetadata field.
func (o *ContentMediaMetadata) SetMeshMetadata(v ContentMeshMetadata) {
	o.MeshMetadata = &v
}

func (o ContentMediaMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.VideoMetadata != nil {
		toSerialize["videoMetadata"] = o.VideoMetadata
	}
	if o.AudioMetadata != nil {
		toSerialize["audioMetadata"] = o.AudioMetadata
	}
	if o.MeshMetadata != nil {
		toSerialize["meshMetadata"] = o.MeshMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableContentMediaMetadata struct {
	value *ContentMediaMetadata
	isSet bool
}

func (v NullableContentMediaMetadata) Get() *ContentMediaMetadata {
	return v.value
}

func (v *NullableContentMediaMetadata) Set(val *ContentMediaMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableContentMediaMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableContentMediaMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentMediaMetadata(val *ContentMediaMetadata) *NullableContentMediaMetadata {
	return &NullableContentMediaMetadata{value: val, isSet: true}
}

func (v NullableContentMediaMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentMediaMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


