/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ColourSetCDLRequest struct for ColourSetCDLRequest
type ColourSetCDLRequest struct {
	Cdl *ColourCDLInfo `json:"cdl,omitempty"`
}

// NewColourSetCDLRequest instantiates a new ColourSetCDLRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewColourSetCDLRequest() *ColourSetCDLRequest {
	this := ColourSetCDLRequest{}
	return &this
}

// NewColourSetCDLRequestWithDefaults instantiates a new ColourSetCDLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewColourSetCDLRequestWithDefaults() *ColourSetCDLRequest {
	this := ColourSetCDLRequest{}
	return &this
}

// GetCdl returns the Cdl field value if set, zero value otherwise.
func (o *ColourSetCDLRequest) GetCdl() ColourCDLInfo {
	if o == nil || o.Cdl == nil {
		var ret ColourCDLInfo
		return ret
	}
	return *o.Cdl
}

// GetCdlOk returns a tuple with the Cdl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColourSetCDLRequest) GetCdlOk() (*ColourCDLInfo, bool) {
	if o == nil || o.Cdl == nil {
		return nil, false
	}
	return o.Cdl, true
}

// HasCdl returns a boolean if a field has been set.
func (o *ColourSetCDLRequest) HasCdl() bool {
	if o != nil && o.Cdl != nil {
		return true
	}

	return false
}

// SetCdl gets a reference to the given ColourCDLInfo and assigns it to the Cdl field.
func (o *ColourSetCDLRequest) SetCdl(v ColourCDLInfo) {
	o.Cdl = &v
}

func (o ColourSetCDLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cdl != nil {
		toSerialize["cdl"] = o.Cdl
	}
	return json.Marshal(toSerialize)
}

type NullableColourSetCDLRequest struct {
	value *ColourSetCDLRequest
	isSet bool
}

func (v NullableColourSetCDLRequest) Get() *ColourSetCDLRequest {
	return v.value
}

func (v *NullableColourSetCDLRequest) Set(val *ColourSetCDLRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableColourSetCDLRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableColourSetCDLRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableColourSetCDLRequest(val *ColourSetCDLRequest) *NullableColourSetCDLRequest {
	return &NullableColourSetCDLRequest{value: val, isSet: true}
}

func (v NullableColourSetCDLRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableColourSetCDLRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


