/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamReferenceInfo struct for RenderstreamReferenceInfo
type RenderstreamReferenceInfo struct {
	TNow *float64 `json:"tNow,omitempty"`
}

// NewRenderstreamReferenceInfo instantiates a new RenderstreamReferenceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamReferenceInfo() *RenderstreamReferenceInfo {
	this := RenderstreamReferenceInfo{}
	return &this
}

// NewRenderstreamReferenceInfoWithDefaults instantiates a new RenderstreamReferenceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamReferenceInfoWithDefaults() *RenderstreamReferenceInfo {
	this := RenderstreamReferenceInfo{}
	return &this
}

// GetTNow returns the TNow field value if set, zero value otherwise.
func (o *RenderstreamReferenceInfo) GetTNow() float64 {
	if o == nil || o.TNow == nil {
		var ret float64
		return ret
	}
	return *o.TNow
}

// GetTNowOk returns a tuple with the TNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamReferenceInfo) GetTNowOk() (*float64, bool) {
	if o == nil || o.TNow == nil {
		return nil, false
	}
	return o.TNow, true
}

// HasTNow returns a boolean if a field has been set.
func (o *RenderstreamReferenceInfo) HasTNow() bool {
	if o != nil && o.TNow != nil {
		return true
	}

	return false
}

// SetTNow gets a reference to the given float64 and assigns it to the TNow field.
func (o *RenderstreamReferenceInfo) SetTNow(v float64) {
	o.TNow = &v
}

func (o RenderstreamReferenceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TNow != nil {
		toSerialize["tNow"] = o.TNow
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamReferenceInfo struct {
	value *RenderstreamReferenceInfo
	isSet bool
}

func (v NullableRenderstreamReferenceInfo) Get() *RenderstreamReferenceInfo {
	return v.value
}

func (v *NullableRenderstreamReferenceInfo) Set(val *RenderstreamReferenceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamReferenceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamReferenceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamReferenceInfo(val *RenderstreamReferenceInfo) *NullableRenderstreamReferenceInfo {
	return &NullableRenderstreamReferenceInfo{value: val, isSet: true}
}

func (v NullableRenderstreamReferenceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamReferenceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


