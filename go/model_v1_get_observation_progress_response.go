/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1GetObservationProgressResponse struct for V1GetObservationProgressResponse
type V1GetObservationProgressResponse struct {
	InProgress *bool `json:"inProgress,omitempty"`
}

// NewV1GetObservationProgressResponse instantiates a new V1GetObservationProgressResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GetObservationProgressResponse() *V1GetObservationProgressResponse {
	this := V1GetObservationProgressResponse{}
	return &this
}

// NewV1GetObservationProgressResponseWithDefaults instantiates a new V1GetObservationProgressResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GetObservationProgressResponseWithDefaults() *V1GetObservationProgressResponse {
	this := V1GetObservationProgressResponse{}
	return &this
}

// GetInProgress returns the InProgress field value if set, zero value otherwise.
func (o *V1GetObservationProgressResponse) GetInProgress() bool {
	if o == nil || o.InProgress == nil {
		var ret bool
		return ret
	}
	return *o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetObservationProgressResponse) GetInProgressOk() (*bool, bool) {
	if o == nil || o.InProgress == nil {
		return nil, false
	}
	return o.InProgress, true
}

// HasInProgress returns a boolean if a field has been set.
func (o *V1GetObservationProgressResponse) HasInProgress() bool {
	if o != nil && o.InProgress != nil {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given bool and assigns it to the InProgress field.
func (o *V1GetObservationProgressResponse) SetInProgress(v bool) {
	o.InProgress = &v
}

func (o V1GetObservationProgressResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InProgress != nil {
		toSerialize["inProgress"] = o.InProgress
	}
	return json.Marshal(toSerialize)
}

type NullableV1GetObservationProgressResponse struct {
	value *V1GetObservationProgressResponse
	isSet bool
}

func (v NullableV1GetObservationProgressResponse) Get() *V1GetObservationProgressResponse {
	return v.value
}

func (v *NullableV1GetObservationProgressResponse) Set(val *V1GetObservationProgressResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GetObservationProgressResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GetObservationProgressResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GetObservationProgressResponse(val *V1GetObservationProgressResponse) *NullableV1GetObservationProgressResponse {
	return &NullableV1GetObservationProgressResponse{value: val, isSet: true}
}

func (v NullableV1GetObservationProgressResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GetObservationProgressResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


