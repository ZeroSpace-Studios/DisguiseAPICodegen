/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatusNotification struct for StatusNotification
type StatusNotification struct {
	Summary *string `json:"summary,omitempty"`
	Detail *string `json:"detail,omitempty"`
}

// NewStatusNotification instantiates a new StatusNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusNotification() *StatusNotification {
	this := StatusNotification{}
	return &this
}

// NewStatusNotificationWithDefaults instantiates a new StatusNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusNotificationWithDefaults() *StatusNotification {
	this := StatusNotification{}
	return &this
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *StatusNotification) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *StatusNotification) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *StatusNotification) SetSummary(v string) {
	o.Summary = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *StatusNotification) GetDetail() string {
	if o == nil || o.Detail == nil {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetDetailOk() (*string, bool) {
	if o == nil || o.Detail == nil {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *StatusNotification) HasDetail() bool {
	if o != nil && o.Detail != nil {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *StatusNotification) SetDetail(v string) {
	o.Detail = &v
}

func (o StatusNotification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	return json.Marshal(toSerialize)
}

type NullableStatusNotification struct {
	value *StatusNotification
	isSet bool
}

func (v NullableStatusNotification) Get() *StatusNotification {
	return v.value
}

func (v *NullableStatusNotification) Set(val *StatusNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusNotification(val *StatusNotification) *NullableStatusNotification {
	return &NullableStatusNotification{value: val, isSet: true}
}

func (v NullableStatusNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


