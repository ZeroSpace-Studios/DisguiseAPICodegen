/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamRenderMachineInfo struct for RenderstreamRenderMachineInfo
type RenderstreamRenderMachineInfo struct {
	Name *string `json:"name,omitempty"`
	StatusString *string `json:"statusString,omitempty"`
	Status *RenderMachineInfoStatus `json:"status,omitempty"`
	Online *bool `json:"online,omitempty"`
	LoadFactor *float32 `json:"loadFactor,omitempty"`
	PreferredAdapter *string `json:"preferredAdapter,omitempty"`
	NetworkAdapters *[]RenderstreamAdapterInfo `json:"networkAdapters,omitempty"`
	Streams *[]RenderstreamStreamInfo `json:"streams,omitempty"`
	Assets *[]RenderstreamAssetInfo `json:"assets,omitempty"`
}

// NewRenderstreamRenderMachineInfo instantiates a new RenderstreamRenderMachineInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamRenderMachineInfo() *RenderstreamRenderMachineInfo {
	this := RenderstreamRenderMachineInfo{}
	var status RenderMachineInfoStatus = UNKNOWN
	this.Status = &status
	return &this
}

// NewRenderstreamRenderMachineInfoWithDefaults instantiates a new RenderstreamRenderMachineInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamRenderMachineInfoWithDefaults() *RenderstreamRenderMachineInfo {
	this := RenderstreamRenderMachineInfo{}
	var status RenderMachineInfoStatus = UNKNOWN
	this.Status = &status
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RenderstreamRenderMachineInfo) SetName(v string) {
	o.Name = &v
}

// GetStatusString returns the StatusString field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetStatusString() string {
	if o == nil || o.StatusString == nil {
		var ret string
		return ret
	}
	return *o.StatusString
}

// GetStatusStringOk returns a tuple with the StatusString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetStatusStringOk() (*string, bool) {
	if o == nil || o.StatusString == nil {
		return nil, false
	}
	return o.StatusString, true
}

// HasStatusString returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasStatusString() bool {
	if o != nil && o.StatusString != nil {
		return true
	}

	return false
}

// SetStatusString gets a reference to the given string and assigns it to the StatusString field.
func (o *RenderstreamRenderMachineInfo) SetStatusString(v string) {
	o.StatusString = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetStatus() RenderMachineInfoStatus {
	if o == nil || o.Status == nil {
		var ret RenderMachineInfoStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetStatusOk() (*RenderMachineInfoStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given RenderMachineInfoStatus and assigns it to the Status field.
func (o *RenderstreamRenderMachineInfo) SetStatus(v RenderMachineInfoStatus) {
	o.Status = &v
}

// GetOnline returns the Online field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetOnline() bool {
	if o == nil || o.Online == nil {
		var ret bool
		return ret
	}
	return *o.Online
}

// GetOnlineOk returns a tuple with the Online field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetOnlineOk() (*bool, bool) {
	if o == nil || o.Online == nil {
		return nil, false
	}
	return o.Online, true
}

// HasOnline returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasOnline() bool {
	if o != nil && o.Online != nil {
		return true
	}

	return false
}

// SetOnline gets a reference to the given bool and assigns it to the Online field.
func (o *RenderstreamRenderMachineInfo) SetOnline(v bool) {
	o.Online = &v
}

// GetLoadFactor returns the LoadFactor field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetLoadFactor() float32 {
	if o == nil || o.LoadFactor == nil {
		var ret float32
		return ret
	}
	return *o.LoadFactor
}

// GetLoadFactorOk returns a tuple with the LoadFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetLoadFactorOk() (*float32, bool) {
	if o == nil || o.LoadFactor == nil {
		return nil, false
	}
	return o.LoadFactor, true
}

// HasLoadFactor returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasLoadFactor() bool {
	if o != nil && o.LoadFactor != nil {
		return true
	}

	return false
}

// SetLoadFactor gets a reference to the given float32 and assigns it to the LoadFactor field.
func (o *RenderstreamRenderMachineInfo) SetLoadFactor(v float32) {
	o.LoadFactor = &v
}

// GetPreferredAdapter returns the PreferredAdapter field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetPreferredAdapter() string {
	if o == nil || o.PreferredAdapter == nil {
		var ret string
		return ret
	}
	return *o.PreferredAdapter
}

// GetPreferredAdapterOk returns a tuple with the PreferredAdapter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetPreferredAdapterOk() (*string, bool) {
	if o == nil || o.PreferredAdapter == nil {
		return nil, false
	}
	return o.PreferredAdapter, true
}

// HasPreferredAdapter returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasPreferredAdapter() bool {
	if o != nil && o.PreferredAdapter != nil {
		return true
	}

	return false
}

// SetPreferredAdapter gets a reference to the given string and assigns it to the PreferredAdapter field.
func (o *RenderstreamRenderMachineInfo) SetPreferredAdapter(v string) {
	o.PreferredAdapter = &v
}

// GetNetworkAdapters returns the NetworkAdapters field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetNetworkAdapters() []RenderstreamAdapterInfo {
	if o == nil || o.NetworkAdapters == nil {
		var ret []RenderstreamAdapterInfo
		return ret
	}
	return *o.NetworkAdapters
}

// GetNetworkAdaptersOk returns a tuple with the NetworkAdapters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetNetworkAdaptersOk() (*[]RenderstreamAdapterInfo, bool) {
	if o == nil || o.NetworkAdapters == nil {
		return nil, false
	}
	return o.NetworkAdapters, true
}

// HasNetworkAdapters returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasNetworkAdapters() bool {
	if o != nil && o.NetworkAdapters != nil {
		return true
	}

	return false
}

// SetNetworkAdapters gets a reference to the given []RenderstreamAdapterInfo and assigns it to the NetworkAdapters field.
func (o *RenderstreamRenderMachineInfo) SetNetworkAdapters(v []RenderstreamAdapterInfo) {
	o.NetworkAdapters = &v
}

// GetStreams returns the Streams field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetStreams() []RenderstreamStreamInfo {
	if o == nil || o.Streams == nil {
		var ret []RenderstreamStreamInfo
		return ret
	}
	return *o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetStreamsOk() (*[]RenderstreamStreamInfo, bool) {
	if o == nil || o.Streams == nil {
		return nil, false
	}
	return o.Streams, true
}

// HasStreams returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasStreams() bool {
	if o != nil && o.Streams != nil {
		return true
	}

	return false
}

// SetStreams gets a reference to the given []RenderstreamStreamInfo and assigns it to the Streams field.
func (o *RenderstreamRenderMachineInfo) SetStreams(v []RenderstreamStreamInfo) {
	o.Streams = &v
}

// GetAssets returns the Assets field value if set, zero value otherwise.
func (o *RenderstreamRenderMachineInfo) GetAssets() []RenderstreamAssetInfo {
	if o == nil || o.Assets == nil {
		var ret []RenderstreamAssetInfo
		return ret
	}
	return *o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamRenderMachineInfo) GetAssetsOk() (*[]RenderstreamAssetInfo, bool) {
	if o == nil || o.Assets == nil {
		return nil, false
	}
	return o.Assets, true
}

// HasAssets returns a boolean if a field has been set.
func (o *RenderstreamRenderMachineInfo) HasAssets() bool {
	if o != nil && o.Assets != nil {
		return true
	}

	return false
}

// SetAssets gets a reference to the given []RenderstreamAssetInfo and assigns it to the Assets field.
func (o *RenderstreamRenderMachineInfo) SetAssets(v []RenderstreamAssetInfo) {
	o.Assets = &v
}

func (o RenderstreamRenderMachineInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.StatusString != nil {
		toSerialize["statusString"] = o.StatusString
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Online != nil {
		toSerialize["online"] = o.Online
	}
	if o.LoadFactor != nil {
		toSerialize["loadFactor"] = o.LoadFactor
	}
	if o.PreferredAdapter != nil {
		toSerialize["preferredAdapter"] = o.PreferredAdapter
	}
	if o.NetworkAdapters != nil {
		toSerialize["networkAdapters"] = o.NetworkAdapters
	}
	if o.Streams != nil {
		toSerialize["streams"] = o.Streams
	}
	if o.Assets != nil {
		toSerialize["assets"] = o.Assets
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamRenderMachineInfo struct {
	value *RenderstreamRenderMachineInfo
	isSet bool
}

func (v NullableRenderstreamRenderMachineInfo) Get() *RenderstreamRenderMachineInfo {
	return v.value
}

func (v *NullableRenderstreamRenderMachineInfo) Set(val *RenderstreamRenderMachineInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamRenderMachineInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamRenderMachineInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamRenderMachineInfo(val *RenderstreamRenderMachineInfo) *NullableRenderstreamRenderMachineInfo {
	return &NullableRenderstreamRenderMachineInfo{value: val, isSet: true}
}

func (v NullableRenderstreamRenderMachineInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamRenderMachineInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


