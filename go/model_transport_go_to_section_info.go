/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransportGoToSectionInfo struct for TransportGoToSectionInfo
type TransportGoToSectionInfo struct {
	Transport *D3apiLocator `json:"transport,omitempty"`
	Section *string `json:"section,omitempty"`
	Playmode *TransportAPIPlayMode `json:"playmode,omitempty"`
}

// NewTransportGoToSectionInfo instantiates a new TransportGoToSectionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportGoToSectionInfo() *TransportGoToSectionInfo {
	this := TransportGoToSectionInfo{}
	var playmode TransportAPIPlayMode = NOT_SET
	this.Playmode = &playmode
	return &this
}

// NewTransportGoToSectionInfoWithDefaults instantiates a new TransportGoToSectionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportGoToSectionInfoWithDefaults() *TransportGoToSectionInfo {
	this := TransportGoToSectionInfo{}
	var playmode TransportAPIPlayMode = NOT_SET
	this.Playmode = &playmode
	return &this
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *TransportGoToSectionInfo) GetTransport() D3apiLocator {
	if o == nil || o.Transport == nil {
		var ret D3apiLocator
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportGoToSectionInfo) GetTransportOk() (*D3apiLocator, bool) {
	if o == nil || o.Transport == nil {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *TransportGoToSectionInfo) HasTransport() bool {
	if o != nil && o.Transport != nil {
		return true
	}

	return false
}

// SetTransport gets a reference to the given D3apiLocator and assigns it to the Transport field.
func (o *TransportGoToSectionInfo) SetTransport(v D3apiLocator) {
	o.Transport = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *TransportGoToSectionInfo) GetSection() string {
	if o == nil || o.Section == nil {
		var ret string
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportGoToSectionInfo) GetSectionOk() (*string, bool) {
	if o == nil || o.Section == nil {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *TransportGoToSectionInfo) HasSection() bool {
	if o != nil && o.Section != nil {
		return true
	}

	return false
}

// SetSection gets a reference to the given string and assigns it to the Section field.
func (o *TransportGoToSectionInfo) SetSection(v string) {
	o.Section = &v
}

// GetPlaymode returns the Playmode field value if set, zero value otherwise.
func (o *TransportGoToSectionInfo) GetPlaymode() TransportAPIPlayMode {
	if o == nil || o.Playmode == nil {
		var ret TransportAPIPlayMode
		return ret
	}
	return *o.Playmode
}

// GetPlaymodeOk returns a tuple with the Playmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportGoToSectionInfo) GetPlaymodeOk() (*TransportAPIPlayMode, bool) {
	if o == nil || o.Playmode == nil {
		return nil, false
	}
	return o.Playmode, true
}

// HasPlaymode returns a boolean if a field has been set.
func (o *TransportGoToSectionInfo) HasPlaymode() bool {
	if o != nil && o.Playmode != nil {
		return true
	}

	return false
}

// SetPlaymode gets a reference to the given TransportAPIPlayMode and assigns it to the Playmode field.
func (o *TransportGoToSectionInfo) SetPlaymode(v TransportAPIPlayMode) {
	o.Playmode = &v
}

func (o TransportGoToSectionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Transport != nil {
		toSerialize["transport"] = o.Transport
	}
	if o.Section != nil {
		toSerialize["section"] = o.Section
	}
	if o.Playmode != nil {
		toSerialize["playmode"] = o.Playmode
	}
	return json.Marshal(toSerialize)
}

type NullableTransportGoToSectionInfo struct {
	value *TransportGoToSectionInfo
	isSet bool
}

func (v NullableTransportGoToSectionInfo) Get() *TransportGoToSectionInfo {
	return v.value
}

func (v *NullableTransportGoToSectionInfo) Set(val *TransportGoToSectionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportGoToSectionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportGoToSectionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportGoToSectionInfo(val *TransportGoToSectionInfo) *NullableTransportGoToSectionInfo {
	return &NullableTransportGoToSectionInfo{value: val, isSet: true}
}

func (v NullableTransportGoToSectionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportGoToSectionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


