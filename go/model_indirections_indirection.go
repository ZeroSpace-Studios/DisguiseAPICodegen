/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IndirectionsIndirection struct for IndirectionsIndirection
type IndirectionsIndirection struct {
	Uid *string `json:"uid,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
	Name *string `json:"name,omitempty"`
	ManualIndirection *IndirectionsManualIndirection `json:"manualIndirection,omitempty"`
	ListIndirection *IndirectionsListIndirection `json:"listIndirection,omitempty"`
}

// NewIndirectionsIndirection instantiates a new IndirectionsIndirection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndirectionsIndirection() *IndirectionsIndirection {
	this := IndirectionsIndirection{}
	return &this
}

// NewIndirectionsIndirectionWithDefaults instantiates a new IndirectionsIndirection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndirectionsIndirectionWithDefaults() *IndirectionsIndirection {
	this := IndirectionsIndirection{}
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *IndirectionsIndirection) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectionsIndirection) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *IndirectionsIndirection) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *IndirectionsIndirection) SetUid(v string) {
	o.Uid = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *IndirectionsIndirection) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectionsIndirection) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *IndirectionsIndirection) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *IndirectionsIndirection) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IndirectionsIndirection) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectionsIndirection) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IndirectionsIndirection) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IndirectionsIndirection) SetName(v string) {
	o.Name = &v
}

// GetManualIndirection returns the ManualIndirection field value if set, zero value otherwise.
func (o *IndirectionsIndirection) GetManualIndirection() IndirectionsManualIndirection {
	if o == nil || o.ManualIndirection == nil {
		var ret IndirectionsManualIndirection
		return ret
	}
	return *o.ManualIndirection
}

// GetManualIndirectionOk returns a tuple with the ManualIndirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectionsIndirection) GetManualIndirectionOk() (*IndirectionsManualIndirection, bool) {
	if o == nil || o.ManualIndirection == nil {
		return nil, false
	}
	return o.ManualIndirection, true
}

// HasManualIndirection returns a boolean if a field has been set.
func (o *IndirectionsIndirection) HasManualIndirection() bool {
	if o != nil && o.ManualIndirection != nil {
		return true
	}

	return false
}

// SetManualIndirection gets a reference to the given IndirectionsManualIndirection and assigns it to the ManualIndirection field.
func (o *IndirectionsIndirection) SetManualIndirection(v IndirectionsManualIndirection) {
	o.ManualIndirection = &v
}

// GetListIndirection returns the ListIndirection field value if set, zero value otherwise.
func (o *IndirectionsIndirection) GetListIndirection() IndirectionsListIndirection {
	if o == nil || o.ListIndirection == nil {
		var ret IndirectionsListIndirection
		return ret
	}
	return *o.ListIndirection
}

// GetListIndirectionOk returns a tuple with the ListIndirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectionsIndirection) GetListIndirectionOk() (*IndirectionsListIndirection, bool) {
	if o == nil || o.ListIndirection == nil {
		return nil, false
	}
	return o.ListIndirection, true
}

// HasListIndirection returns a boolean if a field has been set.
func (o *IndirectionsIndirection) HasListIndirection() bool {
	if o != nil && o.ListIndirection != nil {
		return true
	}

	return false
}

// SetListIndirection gets a reference to the given IndirectionsListIndirection and assigns it to the ListIndirection field.
func (o *IndirectionsIndirection) SetListIndirection(v IndirectionsListIndirection) {
	o.ListIndirection = &v
}

func (o IndirectionsIndirection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.ResourceType != nil {
		toSerialize["resourceType"] = o.ResourceType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ManualIndirection != nil {
		toSerialize["manualIndirection"] = o.ManualIndirection
	}
	if o.ListIndirection != nil {
		toSerialize["listIndirection"] = o.ListIndirection
	}
	return json.Marshal(toSerialize)
}

type NullableIndirectionsIndirection struct {
	value *IndirectionsIndirection
	isSet bool
}

func (v NullableIndirectionsIndirection) Get() *IndirectionsIndirection {
	return v.value
}

func (v *NullableIndirectionsIndirection) Set(val *IndirectionsIndirection) {
	v.value = val
	v.isSet = true
}

func (v NullableIndirectionsIndirection) IsSet() bool {
	return v.isSet
}

func (v *NullableIndirectionsIndirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndirectionsIndirection(val *IndirectionsIndirection) *NullableIndirectionsIndirection {
	return &NullableIndirectionsIndirection{value: val, isSet: true}
}

func (v NullableIndirectionsIndirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndirectionsIndirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


