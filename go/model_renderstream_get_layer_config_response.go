/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamGetLayerConfigResponse struct for RenderstreamGetLayerConfigResponse
type RenderstreamGetLayerConfigResponse struct {
	Status *RpcStatus `json:"status,omitempty"`
	Result *RenderstreamGetLayerConfigResult `json:"result,omitempty"`
}

// NewRenderstreamGetLayerConfigResponse instantiates a new RenderstreamGetLayerConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamGetLayerConfigResponse() *RenderstreamGetLayerConfigResponse {
	this := RenderstreamGetLayerConfigResponse{}
	return &this
}

// NewRenderstreamGetLayerConfigResponseWithDefaults instantiates a new RenderstreamGetLayerConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamGetLayerConfigResponseWithDefaults() *RenderstreamGetLayerConfigResponse {
	this := RenderstreamGetLayerConfigResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RenderstreamGetLayerConfigResponse) GetStatus() RpcStatus {
	if o == nil || o.Status == nil {
		var ret RpcStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerConfigResponse) GetStatusOk() (*RpcStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RenderstreamGetLayerConfigResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given RpcStatus and assigns it to the Status field.
func (o *RenderstreamGetLayerConfigResponse) SetStatus(v RpcStatus) {
	o.Status = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *RenderstreamGetLayerConfigResponse) GetResult() RenderstreamGetLayerConfigResult {
	if o == nil || o.Result == nil {
		var ret RenderstreamGetLayerConfigResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerConfigResponse) GetResultOk() (*RenderstreamGetLayerConfigResult, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *RenderstreamGetLayerConfigResponse) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given RenderstreamGetLayerConfigResult and assigns it to the Result field.
func (o *RenderstreamGetLayerConfigResponse) SetResult(v RenderstreamGetLayerConfigResult) {
	o.Result = &v
}

func (o RenderstreamGetLayerConfigResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamGetLayerConfigResponse struct {
	value *RenderstreamGetLayerConfigResponse
	isSet bool
}

func (v NullableRenderstreamGetLayerConfigResponse) Get() *RenderstreamGetLayerConfigResponse {
	return v.value
}

func (v *NullableRenderstreamGetLayerConfigResponse) Set(val *RenderstreamGetLayerConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamGetLayerConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamGetLayerConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamGetLayerConfigResponse(val *RenderstreamGetLayerConfigResponse) *NullableRenderstreamGetLayerConfigResponse {
	return &NullableRenderstreamGetLayerConfigResponse{value: val, isSet: true}
}

func (v NullableRenderstreamGetLayerConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamGetLayerConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


