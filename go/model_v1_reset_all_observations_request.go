/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ResetAllObservationsRequest struct for V1ResetAllObservationsRequest
type V1ResetAllObservationsRequest struct {
	CameraUid *string `json:"cameraUid,omitempty"`
}

// NewV1ResetAllObservationsRequest instantiates a new V1ResetAllObservationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ResetAllObservationsRequest() *V1ResetAllObservationsRequest {
	this := V1ResetAllObservationsRequest{}
	return &this
}

// NewV1ResetAllObservationsRequestWithDefaults instantiates a new V1ResetAllObservationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ResetAllObservationsRequestWithDefaults() *V1ResetAllObservationsRequest {
	this := V1ResetAllObservationsRequest{}
	return &this
}

// GetCameraUid returns the CameraUid field value if set, zero value otherwise.
func (o *V1ResetAllObservationsRequest) GetCameraUid() string {
	if o == nil || o.CameraUid == nil {
		var ret string
		return ret
	}
	return *o.CameraUid
}

// GetCameraUidOk returns a tuple with the CameraUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ResetAllObservationsRequest) GetCameraUidOk() (*string, bool) {
	if o == nil || o.CameraUid == nil {
		return nil, false
	}
	return o.CameraUid, true
}

// HasCameraUid returns a boolean if a field has been set.
func (o *V1ResetAllObservationsRequest) HasCameraUid() bool {
	if o != nil && o.CameraUid != nil {
		return true
	}

	return false
}

// SetCameraUid gets a reference to the given string and assigns it to the CameraUid field.
func (o *V1ResetAllObservationsRequest) SetCameraUid(v string) {
	o.CameraUid = &v
}

func (o V1ResetAllObservationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CameraUid != nil {
		toSerialize["cameraUid"] = o.CameraUid
	}
	return json.Marshal(toSerialize)
}

type NullableV1ResetAllObservationsRequest struct {
	value *V1ResetAllObservationsRequest
	isSet bool
}

func (v NullableV1ResetAllObservationsRequest) Get() *V1ResetAllObservationsRequest {
	return v.value
}

func (v *NullableV1ResetAllObservationsRequest) Set(val *V1ResetAllObservationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ResetAllObservationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ResetAllObservationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ResetAllObservationsRequest(val *V1ResetAllObservationsRequest) *NullableV1ResetAllObservationsRequest {
	return &NullableV1ResetAllObservationsRequest{value: val, isSet: true}
}

func (v NullableV1ResetAllObservationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ResetAllObservationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


