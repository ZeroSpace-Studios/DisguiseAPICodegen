/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamClusterInfo struct for RenderstreamClusterInfo
type RenderstreamClusterInfo struct {
	Name *string `json:"name,omitempty"`
	RenderMachines *[]RenderstreamRenderMachineInfo `json:"renderMachines,omitempty"`
	ContentSourceMachine *RenderstreamRenderMachineInfo `json:"contentSourceMachine,omitempty"`
	Understudies *[]RenderstreamRenderMachineInfo `json:"understudies,omitempty"`
}

// NewRenderstreamClusterInfo instantiates a new RenderstreamClusterInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamClusterInfo() *RenderstreamClusterInfo {
	this := RenderstreamClusterInfo{}
	return &this
}

// NewRenderstreamClusterInfoWithDefaults instantiates a new RenderstreamClusterInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamClusterInfoWithDefaults() *RenderstreamClusterInfo {
	this := RenderstreamClusterInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RenderstreamClusterInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamClusterInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RenderstreamClusterInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RenderstreamClusterInfo) SetName(v string) {
	o.Name = &v
}

// GetRenderMachines returns the RenderMachines field value if set, zero value otherwise.
func (o *RenderstreamClusterInfo) GetRenderMachines() []RenderstreamRenderMachineInfo {
	if o == nil || o.RenderMachines == nil {
		var ret []RenderstreamRenderMachineInfo
		return ret
	}
	return *o.RenderMachines
}

// GetRenderMachinesOk returns a tuple with the RenderMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamClusterInfo) GetRenderMachinesOk() (*[]RenderstreamRenderMachineInfo, bool) {
	if o == nil || o.RenderMachines == nil {
		return nil, false
	}
	return o.RenderMachines, true
}

// HasRenderMachines returns a boolean if a field has been set.
func (o *RenderstreamClusterInfo) HasRenderMachines() bool {
	if o != nil && o.RenderMachines != nil {
		return true
	}

	return false
}

// SetRenderMachines gets a reference to the given []RenderstreamRenderMachineInfo and assigns it to the RenderMachines field.
func (o *RenderstreamClusterInfo) SetRenderMachines(v []RenderstreamRenderMachineInfo) {
	o.RenderMachines = &v
}

// GetContentSourceMachine returns the ContentSourceMachine field value if set, zero value otherwise.
func (o *RenderstreamClusterInfo) GetContentSourceMachine() RenderstreamRenderMachineInfo {
	if o == nil || o.ContentSourceMachine == nil {
		var ret RenderstreamRenderMachineInfo
		return ret
	}
	return *o.ContentSourceMachine
}

// GetContentSourceMachineOk returns a tuple with the ContentSourceMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamClusterInfo) GetContentSourceMachineOk() (*RenderstreamRenderMachineInfo, bool) {
	if o == nil || o.ContentSourceMachine == nil {
		return nil, false
	}
	return o.ContentSourceMachine, true
}

// HasContentSourceMachine returns a boolean if a field has been set.
func (o *RenderstreamClusterInfo) HasContentSourceMachine() bool {
	if o != nil && o.ContentSourceMachine != nil {
		return true
	}

	return false
}

// SetContentSourceMachine gets a reference to the given RenderstreamRenderMachineInfo and assigns it to the ContentSourceMachine field.
func (o *RenderstreamClusterInfo) SetContentSourceMachine(v RenderstreamRenderMachineInfo) {
	o.ContentSourceMachine = &v
}

// GetUnderstudies returns the Understudies field value if set, zero value otherwise.
func (o *RenderstreamClusterInfo) GetUnderstudies() []RenderstreamRenderMachineInfo {
	if o == nil || o.Understudies == nil {
		var ret []RenderstreamRenderMachineInfo
		return ret
	}
	return *o.Understudies
}

// GetUnderstudiesOk returns a tuple with the Understudies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamClusterInfo) GetUnderstudiesOk() (*[]RenderstreamRenderMachineInfo, bool) {
	if o == nil || o.Understudies == nil {
		return nil, false
	}
	return o.Understudies, true
}

// HasUnderstudies returns a boolean if a field has been set.
func (o *RenderstreamClusterInfo) HasUnderstudies() bool {
	if o != nil && o.Understudies != nil {
		return true
	}

	return false
}

// SetUnderstudies gets a reference to the given []RenderstreamRenderMachineInfo and assigns it to the Understudies field.
func (o *RenderstreamClusterInfo) SetUnderstudies(v []RenderstreamRenderMachineInfo) {
	o.Understudies = &v
}

func (o RenderstreamClusterInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.RenderMachines != nil {
		toSerialize["renderMachines"] = o.RenderMachines
	}
	if o.ContentSourceMachine != nil {
		toSerialize["contentSourceMachine"] = o.ContentSourceMachine
	}
	if o.Understudies != nil {
		toSerialize["understudies"] = o.Understudies
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamClusterInfo struct {
	value *RenderstreamClusterInfo
	isSet bool
}

func (v NullableRenderstreamClusterInfo) Get() *RenderstreamClusterInfo {
	return v.value
}

func (v *NullableRenderstreamClusterInfo) Set(val *RenderstreamClusterInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamClusterInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamClusterInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamClusterInfo(val *RenderstreamClusterInfo) *NullableRenderstreamClusterInfo {
	return &NullableRenderstreamClusterInfo{value: val, isSet: true}
}

func (v NullableRenderstreamClusterInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamClusterInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


