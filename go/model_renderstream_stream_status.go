/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamStreamStatus struct for RenderstreamStreamStatus
type RenderstreamStreamStatus struct {
	SubscriptionWanted *bool `json:"subscriptionWanted,omitempty"`
	SubscribeSuccessful *bool `json:"subscribeSuccessful,omitempty"`
	TLastDropped *float64 `json:"tLastDropped,omitempty"`
	TLastError *float64 `json:"tLastError,omitempty"`
	LastErrorMessage *string `json:"lastErrorMessage,omitempty"`
}

// NewRenderstreamStreamStatus instantiates a new RenderstreamStreamStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamStreamStatus() *RenderstreamStreamStatus {
	this := RenderstreamStreamStatus{}
	return &this
}

// NewRenderstreamStreamStatusWithDefaults instantiates a new RenderstreamStreamStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamStreamStatusWithDefaults() *RenderstreamStreamStatus {
	this := RenderstreamStreamStatus{}
	return &this
}

// GetSubscriptionWanted returns the SubscriptionWanted field value if set, zero value otherwise.
func (o *RenderstreamStreamStatus) GetSubscriptionWanted() bool {
	if o == nil || o.SubscriptionWanted == nil {
		var ret bool
		return ret
	}
	return *o.SubscriptionWanted
}

// GetSubscriptionWantedOk returns a tuple with the SubscriptionWanted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamStreamStatus) GetSubscriptionWantedOk() (*bool, bool) {
	if o == nil || o.SubscriptionWanted == nil {
		return nil, false
	}
	return o.SubscriptionWanted, true
}

// HasSubscriptionWanted returns a boolean if a field has been set.
func (o *RenderstreamStreamStatus) HasSubscriptionWanted() bool {
	if o != nil && o.SubscriptionWanted != nil {
		return true
	}

	return false
}

// SetSubscriptionWanted gets a reference to the given bool and assigns it to the SubscriptionWanted field.
func (o *RenderstreamStreamStatus) SetSubscriptionWanted(v bool) {
	o.SubscriptionWanted = &v
}

// GetSubscribeSuccessful returns the SubscribeSuccessful field value if set, zero value otherwise.
func (o *RenderstreamStreamStatus) GetSubscribeSuccessful() bool {
	if o == nil || o.SubscribeSuccessful == nil {
		var ret bool
		return ret
	}
	return *o.SubscribeSuccessful
}

// GetSubscribeSuccessfulOk returns a tuple with the SubscribeSuccessful field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamStreamStatus) GetSubscribeSuccessfulOk() (*bool, bool) {
	if o == nil || o.SubscribeSuccessful == nil {
		return nil, false
	}
	return o.SubscribeSuccessful, true
}

// HasSubscribeSuccessful returns a boolean if a field has been set.
func (o *RenderstreamStreamStatus) HasSubscribeSuccessful() bool {
	if o != nil && o.SubscribeSuccessful != nil {
		return true
	}

	return false
}

// SetSubscribeSuccessful gets a reference to the given bool and assigns it to the SubscribeSuccessful field.
func (o *RenderstreamStreamStatus) SetSubscribeSuccessful(v bool) {
	o.SubscribeSuccessful = &v
}

// GetTLastDropped returns the TLastDropped field value if set, zero value otherwise.
func (o *RenderstreamStreamStatus) GetTLastDropped() float64 {
	if o == nil || o.TLastDropped == nil {
		var ret float64
		return ret
	}
	return *o.TLastDropped
}

// GetTLastDroppedOk returns a tuple with the TLastDropped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamStreamStatus) GetTLastDroppedOk() (*float64, bool) {
	if o == nil || o.TLastDropped == nil {
		return nil, false
	}
	return o.TLastDropped, true
}

// HasTLastDropped returns a boolean if a field has been set.
func (o *RenderstreamStreamStatus) HasTLastDropped() bool {
	if o != nil && o.TLastDropped != nil {
		return true
	}

	return false
}

// SetTLastDropped gets a reference to the given float64 and assigns it to the TLastDropped field.
func (o *RenderstreamStreamStatus) SetTLastDropped(v float64) {
	o.TLastDropped = &v
}

// GetTLastError returns the TLastError field value if set, zero value otherwise.
func (o *RenderstreamStreamStatus) GetTLastError() float64 {
	if o == nil || o.TLastError == nil {
		var ret float64
		return ret
	}
	return *o.TLastError
}

// GetTLastErrorOk returns a tuple with the TLastError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamStreamStatus) GetTLastErrorOk() (*float64, bool) {
	if o == nil || o.TLastError == nil {
		return nil, false
	}
	return o.TLastError, true
}

// HasTLastError returns a boolean if a field has been set.
func (o *RenderstreamStreamStatus) HasTLastError() bool {
	if o != nil && o.TLastError != nil {
		return true
	}

	return false
}

// SetTLastError gets a reference to the given float64 and assigns it to the TLastError field.
func (o *RenderstreamStreamStatus) SetTLastError(v float64) {
	o.TLastError = &v
}

// GetLastErrorMessage returns the LastErrorMessage field value if set, zero value otherwise.
func (o *RenderstreamStreamStatus) GetLastErrorMessage() string {
	if o == nil || o.LastErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.LastErrorMessage
}

// GetLastErrorMessageOk returns a tuple with the LastErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamStreamStatus) GetLastErrorMessageOk() (*string, bool) {
	if o == nil || o.LastErrorMessage == nil {
		return nil, false
	}
	return o.LastErrorMessage, true
}

// HasLastErrorMessage returns a boolean if a field has been set.
func (o *RenderstreamStreamStatus) HasLastErrorMessage() bool {
	if o != nil && o.LastErrorMessage != nil {
		return true
	}

	return false
}

// SetLastErrorMessage gets a reference to the given string and assigns it to the LastErrorMessage field.
func (o *RenderstreamStreamStatus) SetLastErrorMessage(v string) {
	o.LastErrorMessage = &v
}

func (o RenderstreamStreamStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubscriptionWanted != nil {
		toSerialize["subscriptionWanted"] = o.SubscriptionWanted
	}
	if o.SubscribeSuccessful != nil {
		toSerialize["subscribeSuccessful"] = o.SubscribeSuccessful
	}
	if o.TLastDropped != nil {
		toSerialize["tLastDropped"] = o.TLastDropped
	}
	if o.TLastError != nil {
		toSerialize["tLastError"] = o.TLastError
	}
	if o.LastErrorMessage != nil {
		toSerialize["lastErrorMessage"] = o.LastErrorMessage
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamStreamStatus struct {
	value *RenderstreamStreamStatus
	isSet bool
}

func (v NullableRenderstreamStreamStatus) Get() *RenderstreamStreamStatus {
	return v.value
}

func (v *NullableRenderstreamStreamStatus) Set(val *RenderstreamStreamStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamStreamStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamStreamStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamStreamStatus(val *RenderstreamStreamStatus) *NullableRenderstreamStreamStatus {
	return &NullableRenderstreamStreamStatus{value: val, isSet: true}
}

func (v NullableRenderstreamStreamStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamStreamStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


