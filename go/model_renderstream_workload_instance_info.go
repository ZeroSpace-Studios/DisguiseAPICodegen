/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamWorkloadInstanceInfo struct for RenderstreamWorkloadInstanceInfo
type RenderstreamWorkloadInstanceInfo struct {
	Workloadid *string `json:"workloadid,omitempty"`
	Instanceid *int64 `json:"instanceid,omitempty"`
	ProcessRunning *bool `json:"processRunning,omitempty"`
	DroppingFrames *bool `json:"droppingFrames,omitempty"`
	Status *WorkloadInstanceInfoWorkloadInstanceStatus `json:"status,omitempty"`
	DroppingInputFrames *bool `json:"droppingInputFrames,omitempty"`
}

// NewRenderstreamWorkloadInstanceInfo instantiates a new RenderstreamWorkloadInstanceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamWorkloadInstanceInfo() *RenderstreamWorkloadInstanceInfo {
	this := RenderstreamWorkloadInstanceInfo{}
	var status WorkloadInstanceInfoWorkloadInstanceStatus = UNKNOWN
	this.Status = &status
	return &this
}

// NewRenderstreamWorkloadInstanceInfoWithDefaults instantiates a new RenderstreamWorkloadInstanceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamWorkloadInstanceInfoWithDefaults() *RenderstreamWorkloadInstanceInfo {
	this := RenderstreamWorkloadInstanceInfo{}
	var status WorkloadInstanceInfoWorkloadInstanceStatus = UNKNOWN
	this.Status = &status
	return &this
}

// GetWorkloadid returns the Workloadid field value if set, zero value otherwise.
func (o *RenderstreamWorkloadInstanceInfo) GetWorkloadid() string {
	if o == nil || o.Workloadid == nil {
		var ret string
		return ret
	}
	return *o.Workloadid
}

// GetWorkloadidOk returns a tuple with the Workloadid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamWorkloadInstanceInfo) GetWorkloadidOk() (*string, bool) {
	if o == nil || o.Workloadid == nil {
		return nil, false
	}
	return o.Workloadid, true
}

// HasWorkloadid returns a boolean if a field has been set.
func (o *RenderstreamWorkloadInstanceInfo) HasWorkloadid() bool {
	if o != nil && o.Workloadid != nil {
		return true
	}

	return false
}

// SetWorkloadid gets a reference to the given string and assigns it to the Workloadid field.
func (o *RenderstreamWorkloadInstanceInfo) SetWorkloadid(v string) {
	o.Workloadid = &v
}

// GetInstanceid returns the Instanceid field value if set, zero value otherwise.
func (o *RenderstreamWorkloadInstanceInfo) GetInstanceid() int64 {
	if o == nil || o.Instanceid == nil {
		var ret int64
		return ret
	}
	return *o.Instanceid
}

// GetInstanceidOk returns a tuple with the Instanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamWorkloadInstanceInfo) GetInstanceidOk() (*int64, bool) {
	if o == nil || o.Instanceid == nil {
		return nil, false
	}
	return o.Instanceid, true
}

// HasInstanceid returns a boolean if a field has been set.
func (o *RenderstreamWorkloadInstanceInfo) HasInstanceid() bool {
	if o != nil && o.Instanceid != nil {
		return true
	}

	return false
}

// SetInstanceid gets a reference to the given int64 and assigns it to the Instanceid field.
func (o *RenderstreamWorkloadInstanceInfo) SetInstanceid(v int64) {
	o.Instanceid = &v
}

// GetProcessRunning returns the ProcessRunning field value if set, zero value otherwise.
func (o *RenderstreamWorkloadInstanceInfo) GetProcessRunning() bool {
	if o == nil || o.ProcessRunning == nil {
		var ret bool
		return ret
	}
	return *o.ProcessRunning
}

// GetProcessRunningOk returns a tuple with the ProcessRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamWorkloadInstanceInfo) GetProcessRunningOk() (*bool, bool) {
	if o == nil || o.ProcessRunning == nil {
		return nil, false
	}
	return o.ProcessRunning, true
}

// HasProcessRunning returns a boolean if a field has been set.
func (o *RenderstreamWorkloadInstanceInfo) HasProcessRunning() bool {
	if o != nil && o.ProcessRunning != nil {
		return true
	}

	return false
}

// SetProcessRunning gets a reference to the given bool and assigns it to the ProcessRunning field.
func (o *RenderstreamWorkloadInstanceInfo) SetProcessRunning(v bool) {
	o.ProcessRunning = &v
}

// GetDroppingFrames returns the DroppingFrames field value if set, zero value otherwise.
func (o *RenderstreamWorkloadInstanceInfo) GetDroppingFrames() bool {
	if o == nil || o.DroppingFrames == nil {
		var ret bool
		return ret
	}
	return *o.DroppingFrames
}

// GetDroppingFramesOk returns a tuple with the DroppingFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamWorkloadInstanceInfo) GetDroppingFramesOk() (*bool, bool) {
	if o == nil || o.DroppingFrames == nil {
		return nil, false
	}
	return o.DroppingFrames, true
}

// HasDroppingFrames returns a boolean if a field has been set.
func (o *RenderstreamWorkloadInstanceInfo) HasDroppingFrames() bool {
	if o != nil && o.DroppingFrames != nil {
		return true
	}

	return false
}

// SetDroppingFrames gets a reference to the given bool and assigns it to the DroppingFrames field.
func (o *RenderstreamWorkloadInstanceInfo) SetDroppingFrames(v bool) {
	o.DroppingFrames = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RenderstreamWorkloadInstanceInfo) GetStatus() WorkloadInstanceInfoWorkloadInstanceStatus {
	if o == nil || o.Status == nil {
		var ret WorkloadInstanceInfoWorkloadInstanceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamWorkloadInstanceInfo) GetStatusOk() (*WorkloadInstanceInfoWorkloadInstanceStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RenderstreamWorkloadInstanceInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WorkloadInstanceInfoWorkloadInstanceStatus and assigns it to the Status field.
func (o *RenderstreamWorkloadInstanceInfo) SetStatus(v WorkloadInstanceInfoWorkloadInstanceStatus) {
	o.Status = &v
}

// GetDroppingInputFrames returns the DroppingInputFrames field value if set, zero value otherwise.
func (o *RenderstreamWorkloadInstanceInfo) GetDroppingInputFrames() bool {
	if o == nil || o.DroppingInputFrames == nil {
		var ret bool
		return ret
	}
	return *o.DroppingInputFrames
}

// GetDroppingInputFramesOk returns a tuple with the DroppingInputFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamWorkloadInstanceInfo) GetDroppingInputFramesOk() (*bool, bool) {
	if o == nil || o.DroppingInputFrames == nil {
		return nil, false
	}
	return o.DroppingInputFrames, true
}

// HasDroppingInputFrames returns a boolean if a field has been set.
func (o *RenderstreamWorkloadInstanceInfo) HasDroppingInputFrames() bool {
	if o != nil && o.DroppingInputFrames != nil {
		return true
	}

	return false
}

// SetDroppingInputFrames gets a reference to the given bool and assigns it to the DroppingInputFrames field.
func (o *RenderstreamWorkloadInstanceInfo) SetDroppingInputFrames(v bool) {
	o.DroppingInputFrames = &v
}

func (o RenderstreamWorkloadInstanceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Workloadid != nil {
		toSerialize["workloadid"] = o.Workloadid
	}
	if o.Instanceid != nil {
		toSerialize["instanceid"] = o.Instanceid
	}
	if o.ProcessRunning != nil {
		toSerialize["processRunning"] = o.ProcessRunning
	}
	if o.DroppingFrames != nil {
		toSerialize["droppingFrames"] = o.DroppingFrames
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.DroppingInputFrames != nil {
		toSerialize["droppingInputFrames"] = o.DroppingInputFrames
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamWorkloadInstanceInfo struct {
	value *RenderstreamWorkloadInstanceInfo
	isSet bool
}

func (v NullableRenderstreamWorkloadInstanceInfo) Get() *RenderstreamWorkloadInstanceInfo {
	return v.value
}

func (v *NullableRenderstreamWorkloadInstanceInfo) Set(val *RenderstreamWorkloadInstanceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamWorkloadInstanceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamWorkloadInstanceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamWorkloadInstanceInfo(val *RenderstreamWorkloadInstanceInfo) *NullableRenderstreamWorkloadInstanceInfo {
	return &NullableRenderstreamWorkloadInstanceInfo{value: val, isSet: true}
}

func (v NullableRenderstreamWorkloadInstanceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamWorkloadInstanceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


