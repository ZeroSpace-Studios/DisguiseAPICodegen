/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SequencingChangeIndirectionsRequest struct for SequencingChangeIndirectionsRequest
type SequencingChangeIndirectionsRequest struct {
	Changes *[]SequencingIndirectionChangeAssignment `json:"changes,omitempty"`
}

// NewSequencingChangeIndirectionsRequest instantiates a new SequencingChangeIndirectionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSequencingChangeIndirectionsRequest() *SequencingChangeIndirectionsRequest {
	this := SequencingChangeIndirectionsRequest{}
	return &this
}

// NewSequencingChangeIndirectionsRequestWithDefaults instantiates a new SequencingChangeIndirectionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSequencingChangeIndirectionsRequestWithDefaults() *SequencingChangeIndirectionsRequest {
	this := SequencingChangeIndirectionsRequest{}
	return &this
}

// GetChanges returns the Changes field value if set, zero value otherwise.
func (o *SequencingChangeIndirectionsRequest) GetChanges() []SequencingIndirectionChangeAssignment {
	if o == nil || o.Changes == nil {
		var ret []SequencingIndirectionChangeAssignment
		return ret
	}
	return *o.Changes
}

// GetChangesOk returns a tuple with the Changes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SequencingChangeIndirectionsRequest) GetChangesOk() (*[]SequencingIndirectionChangeAssignment, bool) {
	if o == nil || o.Changes == nil {
		return nil, false
	}
	return o.Changes, true
}

// HasChanges returns a boolean if a field has been set.
func (o *SequencingChangeIndirectionsRequest) HasChanges() bool {
	if o != nil && o.Changes != nil {
		return true
	}

	return false
}

// SetChanges gets a reference to the given []SequencingIndirectionChangeAssignment and assigns it to the Changes field.
func (o *SequencingChangeIndirectionsRequest) SetChanges(v []SequencingIndirectionChangeAssignment) {
	o.Changes = &v
}

func (o SequencingChangeIndirectionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Changes != nil {
		toSerialize["changes"] = o.Changes
	}
	return json.Marshal(toSerialize)
}

type NullableSequencingChangeIndirectionsRequest struct {
	value *SequencingChangeIndirectionsRequest
	isSet bool
}

func (v NullableSequencingChangeIndirectionsRequest) Get() *SequencingChangeIndirectionsRequest {
	return v.value
}

func (v *NullableSequencingChangeIndirectionsRequest) Set(val *SequencingChangeIndirectionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSequencingChangeIndirectionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSequencingChangeIndirectionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSequencingChangeIndirectionsRequest(val *SequencingChangeIndirectionsRequest) *NullableSequencingChangeIndirectionsRequest {
	return &NullableSequencingChangeIndirectionsRequest{value: val, isSet: true}
}

func (v NullableSequencingChangeIndirectionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSequencingChangeIndirectionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


