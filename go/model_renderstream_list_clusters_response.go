/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamListClustersResponse struct for RenderstreamListClustersResponse
type RenderstreamListClustersResponse struct {
	Clusters *[]RenderstreamClusterInfo `json:"clusters,omitempty"`
}

// NewRenderstreamListClustersResponse instantiates a new RenderstreamListClustersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamListClustersResponse() *RenderstreamListClustersResponse {
	this := RenderstreamListClustersResponse{}
	return &this
}

// NewRenderstreamListClustersResponseWithDefaults instantiates a new RenderstreamListClustersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamListClustersResponseWithDefaults() *RenderstreamListClustersResponse {
	this := RenderstreamListClustersResponse{}
	return &this
}

// GetClusters returns the Clusters field value if set, zero value otherwise.
func (o *RenderstreamListClustersResponse) GetClusters() []RenderstreamClusterInfo {
	if o == nil || o.Clusters == nil {
		var ret []RenderstreamClusterInfo
		return ret
	}
	return *o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamListClustersResponse) GetClustersOk() (*[]RenderstreamClusterInfo, bool) {
	if o == nil || o.Clusters == nil {
		return nil, false
	}
	return o.Clusters, true
}

// HasClusters returns a boolean if a field has been set.
func (o *RenderstreamListClustersResponse) HasClusters() bool {
	if o != nil && o.Clusters != nil {
		return true
	}

	return false
}

// SetClusters gets a reference to the given []RenderstreamClusterInfo and assigns it to the Clusters field.
func (o *RenderstreamListClustersResponse) SetClusters(v []RenderstreamClusterInfo) {
	o.Clusters = &v
}

func (o RenderstreamListClustersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Clusters != nil {
		toSerialize["clusters"] = o.Clusters
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamListClustersResponse struct {
	value *RenderstreamListClustersResponse
	isSet bool
}

func (v NullableRenderstreamListClustersResponse) Get() *RenderstreamListClustersResponse {
	return v.value
}

func (v *NullableRenderstreamListClustersResponse) Set(val *RenderstreamListClustersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamListClustersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamListClustersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamListClustersResponse(val *RenderstreamListClustersResponse) *NullableRenderstreamListClustersResponse {
	return &NullableRenderstreamListClustersResponse{value: val, isSet: true}
}

func (v NullableRenderstreamListClustersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamListClustersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


