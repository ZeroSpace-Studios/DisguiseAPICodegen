/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatusGetProjectResult struct for StatusGetProjectResult
type StatusGetProjectResult struct {
	ProjectPath *string `json:"projectPath,omitempty"`
	Version *StatusD3VersionInfo `json:"version,omitempty"`
}

// NewStatusGetProjectResult instantiates a new StatusGetProjectResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusGetProjectResult() *StatusGetProjectResult {
	this := StatusGetProjectResult{}
	return &this
}

// NewStatusGetProjectResultWithDefaults instantiates a new StatusGetProjectResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusGetProjectResultWithDefaults() *StatusGetProjectResult {
	this := StatusGetProjectResult{}
	return &this
}

// GetProjectPath returns the ProjectPath field value if set, zero value otherwise.
func (o *StatusGetProjectResult) GetProjectPath() string {
	if o == nil || o.ProjectPath == nil {
		var ret string
		return ret
	}
	return *o.ProjectPath
}

// GetProjectPathOk returns a tuple with the ProjectPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGetProjectResult) GetProjectPathOk() (*string, bool) {
	if o == nil || o.ProjectPath == nil {
		return nil, false
	}
	return o.ProjectPath, true
}

// HasProjectPath returns a boolean if a field has been set.
func (o *StatusGetProjectResult) HasProjectPath() bool {
	if o != nil && o.ProjectPath != nil {
		return true
	}

	return false
}

// SetProjectPath gets a reference to the given string and assigns it to the ProjectPath field.
func (o *StatusGetProjectResult) SetProjectPath(v string) {
	o.ProjectPath = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *StatusGetProjectResult) GetVersion() StatusD3VersionInfo {
	if o == nil || o.Version == nil {
		var ret StatusD3VersionInfo
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGetProjectResult) GetVersionOk() (*StatusD3VersionInfo, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *StatusGetProjectResult) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given StatusD3VersionInfo and assigns it to the Version field.
func (o *StatusGetProjectResult) SetVersion(v StatusD3VersionInfo) {
	o.Version = &v
}

func (o StatusGetProjectResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProjectPath != nil {
		toSerialize["projectPath"] = o.ProjectPath
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableStatusGetProjectResult struct {
	value *StatusGetProjectResult
	isSet bool
}

func (v NullableStatusGetProjectResult) Get() *StatusGetProjectResult {
	return v.value
}

func (v *NullableStatusGetProjectResult) Set(val *StatusGetProjectResult) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusGetProjectResult) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusGetProjectResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusGetProjectResult(val *StatusGetProjectResult) *NullableStatusGetProjectResult {
	return &NullableStatusGetProjectResult{value: val, isSet: true}
}

func (v NullableStatusGetProjectResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusGetProjectResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


