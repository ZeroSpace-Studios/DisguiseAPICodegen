/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransportSetEngagedRequest struct for TransportSetEngagedRequest
type TransportSetEngagedRequest struct {
	Transports *[]TransportSetEngagedInfo `json:"transports,omitempty"`
}

// NewTransportSetEngagedRequest instantiates a new TransportSetEngagedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportSetEngagedRequest() *TransportSetEngagedRequest {
	this := TransportSetEngagedRequest{}
	return &this
}

// NewTransportSetEngagedRequestWithDefaults instantiates a new TransportSetEngagedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportSetEngagedRequestWithDefaults() *TransportSetEngagedRequest {
	this := TransportSetEngagedRequest{}
	return &this
}

// GetTransports returns the Transports field value if set, zero value otherwise.
func (o *TransportSetEngagedRequest) GetTransports() []TransportSetEngagedInfo {
	if o == nil || o.Transports == nil {
		var ret []TransportSetEngagedInfo
		return ret
	}
	return *o.Transports
}

// GetTransportsOk returns a tuple with the Transports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportSetEngagedRequest) GetTransportsOk() (*[]TransportSetEngagedInfo, bool) {
	if o == nil || o.Transports == nil {
		return nil, false
	}
	return o.Transports, true
}

// HasTransports returns a boolean if a field has been set.
func (o *TransportSetEngagedRequest) HasTransports() bool {
	if o != nil && o.Transports != nil {
		return true
	}

	return false
}

// SetTransports gets a reference to the given []TransportSetEngagedInfo and assigns it to the Transports field.
func (o *TransportSetEngagedRequest) SetTransports(v []TransportSetEngagedInfo) {
	o.Transports = &v
}

func (o TransportSetEngagedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Transports != nil {
		toSerialize["transports"] = o.Transports
	}
	return json.Marshal(toSerialize)
}

type NullableTransportSetEngagedRequest struct {
	value *TransportSetEngagedRequest
	isSet bool
}

func (v NullableTransportSetEngagedRequest) Get() *TransportSetEngagedRequest {
	return v.value
}

func (v *NullableTransportSetEngagedRequest) Set(val *TransportSetEngagedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportSetEngagedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportSetEngagedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportSetEngagedRequest(val *TransportSetEngagedRequest) *NullableTransportSetEngagedRequest {
	return &NullableTransportSetEngagedRequest{value: val, isSet: true}
}

func (v NullableTransportSetEngagedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportSetEngagedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


