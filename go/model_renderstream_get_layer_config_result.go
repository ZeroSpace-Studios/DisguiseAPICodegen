/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamGetLayerConfigResult struct for RenderstreamGetLayerConfigResult
type RenderstreamGetLayerConfigResult struct {
	FramerateFractionDivisor *int32 `json:"framerateFractionDivisor,omitempty"`
	Asset *RenderstreamAsset `json:"asset,omitempty"`
	Pool *RenderstreamPool `json:"pool,omitempty"`
	ChannelMappings *[]RenderstreamChannelMappingInfo `json:"channelMappings,omitempty"`
	DefaultAssigner *RenderstreamAssigner `json:"defaultAssigner,omitempty"`
}

// NewRenderstreamGetLayerConfigResult instantiates a new RenderstreamGetLayerConfigResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamGetLayerConfigResult() *RenderstreamGetLayerConfigResult {
	this := RenderstreamGetLayerConfigResult{}
	return &this
}

// NewRenderstreamGetLayerConfigResultWithDefaults instantiates a new RenderstreamGetLayerConfigResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamGetLayerConfigResultWithDefaults() *RenderstreamGetLayerConfigResult {
	this := RenderstreamGetLayerConfigResult{}
	return &this
}

// GetFramerateFractionDivisor returns the FramerateFractionDivisor field value if set, zero value otherwise.
func (o *RenderstreamGetLayerConfigResult) GetFramerateFractionDivisor() int32 {
	if o == nil || o.FramerateFractionDivisor == nil {
		var ret int32
		return ret
	}
	return *o.FramerateFractionDivisor
}

// GetFramerateFractionDivisorOk returns a tuple with the FramerateFractionDivisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerConfigResult) GetFramerateFractionDivisorOk() (*int32, bool) {
	if o == nil || o.FramerateFractionDivisor == nil {
		return nil, false
	}
	return o.FramerateFractionDivisor, true
}

// HasFramerateFractionDivisor returns a boolean if a field has been set.
func (o *RenderstreamGetLayerConfigResult) HasFramerateFractionDivisor() bool {
	if o != nil && o.FramerateFractionDivisor != nil {
		return true
	}

	return false
}

// SetFramerateFractionDivisor gets a reference to the given int32 and assigns it to the FramerateFractionDivisor field.
func (o *RenderstreamGetLayerConfigResult) SetFramerateFractionDivisor(v int32) {
	o.FramerateFractionDivisor = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *RenderstreamGetLayerConfigResult) GetAsset() RenderstreamAsset {
	if o == nil || o.Asset == nil {
		var ret RenderstreamAsset
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerConfigResult) GetAssetOk() (*RenderstreamAsset, bool) {
	if o == nil || o.Asset == nil {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *RenderstreamGetLayerConfigResult) HasAsset() bool {
	if o != nil && o.Asset != nil {
		return true
	}

	return false
}

// SetAsset gets a reference to the given RenderstreamAsset and assigns it to the Asset field.
func (o *RenderstreamGetLayerConfigResult) SetAsset(v RenderstreamAsset) {
	o.Asset = &v
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *RenderstreamGetLayerConfigResult) GetPool() RenderstreamPool {
	if o == nil || o.Pool == nil {
		var ret RenderstreamPool
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerConfigResult) GetPoolOk() (*RenderstreamPool, bool) {
	if o == nil || o.Pool == nil {
		return nil, false
	}
	return o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *RenderstreamGetLayerConfigResult) HasPool() bool {
	if o != nil && o.Pool != nil {
		return true
	}

	return false
}

// SetPool gets a reference to the given RenderstreamPool and assigns it to the Pool field.
func (o *RenderstreamGetLayerConfigResult) SetPool(v RenderstreamPool) {
	o.Pool = &v
}

// GetChannelMappings returns the ChannelMappings field value if set, zero value otherwise.
func (o *RenderstreamGetLayerConfigResult) GetChannelMappings() []RenderstreamChannelMappingInfo {
	if o == nil || o.ChannelMappings == nil {
		var ret []RenderstreamChannelMappingInfo
		return ret
	}
	return *o.ChannelMappings
}

// GetChannelMappingsOk returns a tuple with the ChannelMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerConfigResult) GetChannelMappingsOk() (*[]RenderstreamChannelMappingInfo, bool) {
	if o == nil || o.ChannelMappings == nil {
		return nil, false
	}
	return o.ChannelMappings, true
}

// HasChannelMappings returns a boolean if a field has been set.
func (o *RenderstreamGetLayerConfigResult) HasChannelMappings() bool {
	if o != nil && o.ChannelMappings != nil {
		return true
	}

	return false
}

// SetChannelMappings gets a reference to the given []RenderstreamChannelMappingInfo and assigns it to the ChannelMappings field.
func (o *RenderstreamGetLayerConfigResult) SetChannelMappings(v []RenderstreamChannelMappingInfo) {
	o.ChannelMappings = &v
}

// GetDefaultAssigner returns the DefaultAssigner field value if set, zero value otherwise.
func (o *RenderstreamGetLayerConfigResult) GetDefaultAssigner() RenderstreamAssigner {
	if o == nil || o.DefaultAssigner == nil {
		var ret RenderstreamAssigner
		return ret
	}
	return *o.DefaultAssigner
}

// GetDefaultAssignerOk returns a tuple with the DefaultAssigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerConfigResult) GetDefaultAssignerOk() (*RenderstreamAssigner, bool) {
	if o == nil || o.DefaultAssigner == nil {
		return nil, false
	}
	return o.DefaultAssigner, true
}

// HasDefaultAssigner returns a boolean if a field has been set.
func (o *RenderstreamGetLayerConfigResult) HasDefaultAssigner() bool {
	if o != nil && o.DefaultAssigner != nil {
		return true
	}

	return false
}

// SetDefaultAssigner gets a reference to the given RenderstreamAssigner and assigns it to the DefaultAssigner field.
func (o *RenderstreamGetLayerConfigResult) SetDefaultAssigner(v RenderstreamAssigner) {
	o.DefaultAssigner = &v
}

func (o RenderstreamGetLayerConfigResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FramerateFractionDivisor != nil {
		toSerialize["framerateFractionDivisor"] = o.FramerateFractionDivisor
	}
	if o.Asset != nil {
		toSerialize["asset"] = o.Asset
	}
	if o.Pool != nil {
		toSerialize["pool"] = o.Pool
	}
	if o.ChannelMappings != nil {
		toSerialize["channelMappings"] = o.ChannelMappings
	}
	if o.DefaultAssigner != nil {
		toSerialize["defaultAssigner"] = o.DefaultAssigner
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamGetLayerConfigResult struct {
	value *RenderstreamGetLayerConfigResult
	isSet bool
}

func (v NullableRenderstreamGetLayerConfigResult) Get() *RenderstreamGetLayerConfigResult {
	return v.value
}

func (v *NullableRenderstreamGetLayerConfigResult) Set(val *RenderstreamGetLayerConfigResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamGetLayerConfigResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamGetLayerConfigResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamGetLayerConfigResult(val *RenderstreamGetLayerConfigResult) *NullableRenderstreamGetLayerConfigResult {
	return &NullableRenderstreamGetLayerConfigResult{value: val, isSet: true}
}

func (v NullableRenderstreamGetLayerConfigResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamGetLayerConfigResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


