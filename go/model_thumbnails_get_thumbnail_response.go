/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ThumbnailsGetThumbnailResponse struct for ThumbnailsGetThumbnailResponse
type ThumbnailsGetThumbnailResponse struct {
	Path *string `json:"path,omitempty"`
}

// NewThumbnailsGetThumbnailResponse instantiates a new ThumbnailsGetThumbnailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThumbnailsGetThumbnailResponse() *ThumbnailsGetThumbnailResponse {
	this := ThumbnailsGetThumbnailResponse{}
	return &this
}

// NewThumbnailsGetThumbnailResponseWithDefaults instantiates a new ThumbnailsGetThumbnailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThumbnailsGetThumbnailResponseWithDefaults() *ThumbnailsGetThumbnailResponse {
	this := ThumbnailsGetThumbnailResponse{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ThumbnailsGetThumbnailResponse) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThumbnailsGetThumbnailResponse) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ThumbnailsGetThumbnailResponse) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ThumbnailsGetThumbnailResponse) SetPath(v string) {
	o.Path = &v
}

func (o ThumbnailsGetThumbnailResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableThumbnailsGetThumbnailResponse struct {
	value *ThumbnailsGetThumbnailResponse
	isSet bool
}

func (v NullableThumbnailsGetThumbnailResponse) Get() *ThumbnailsGetThumbnailResponse {
	return v.value
}

func (v *NullableThumbnailsGetThumbnailResponse) Set(val *ThumbnailsGetThumbnailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableThumbnailsGetThumbnailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableThumbnailsGetThumbnailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThumbnailsGetThumbnailResponse(val *ThumbnailsGetThumbnailResponse) *NullableThumbnailsGetThumbnailResponse {
	return &NullableThumbnailsGetThumbnailResponse{value: val, isSet: true}
}

func (v NullableThumbnailsGetThumbnailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThumbnailsGetThumbnailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


