/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContentMeshMetadata struct for ContentMeshMetadata
type ContentMeshMetadata struct {
	NVertices *int64 `json:"nVertices,omitempty"`
	NTriangles *int64 `json:"nTriangles,omitempty"`
	Centroid *ContentVector3 `json:"centroid,omitempty"`
	ExtentsMin *ContentVector3 `json:"extentsMin,omitempty"`
	ExtentsMax *ContentVector3 `json:"extentsMax,omitempty"`
}

// NewContentMeshMetadata instantiates a new ContentMeshMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentMeshMetadata() *ContentMeshMetadata {
	this := ContentMeshMetadata{}
	return &this
}

// NewContentMeshMetadataWithDefaults instantiates a new ContentMeshMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentMeshMetadataWithDefaults() *ContentMeshMetadata {
	this := ContentMeshMetadata{}
	return &this
}

// GetNVertices returns the NVertices field value if set, zero value otherwise.
func (o *ContentMeshMetadata) GetNVertices() int64 {
	if o == nil || o.NVertices == nil {
		var ret int64
		return ret
	}
	return *o.NVertices
}

// GetNVerticesOk returns a tuple with the NVertices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMeshMetadata) GetNVerticesOk() (*int64, bool) {
	if o == nil || o.NVertices == nil {
		return nil, false
	}
	return o.NVertices, true
}

// HasNVertices returns a boolean if a field has been set.
func (o *ContentMeshMetadata) HasNVertices() bool {
	if o != nil && o.NVertices != nil {
		return true
	}

	return false
}

// SetNVertices gets a reference to the given int64 and assigns it to the NVertices field.
func (o *ContentMeshMetadata) SetNVertices(v int64) {
	o.NVertices = &v
}

// GetNTriangles returns the NTriangles field value if set, zero value otherwise.
func (o *ContentMeshMetadata) GetNTriangles() int64 {
	if o == nil || o.NTriangles == nil {
		var ret int64
		return ret
	}
	return *o.NTriangles
}

// GetNTrianglesOk returns a tuple with the NTriangles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMeshMetadata) GetNTrianglesOk() (*int64, bool) {
	if o == nil || o.NTriangles == nil {
		return nil, false
	}
	return o.NTriangles, true
}

// HasNTriangles returns a boolean if a field has been set.
func (o *ContentMeshMetadata) HasNTriangles() bool {
	if o != nil && o.NTriangles != nil {
		return true
	}

	return false
}

// SetNTriangles gets a reference to the given int64 and assigns it to the NTriangles field.
func (o *ContentMeshMetadata) SetNTriangles(v int64) {
	o.NTriangles = &v
}

// GetCentroid returns the Centroid field value if set, zero value otherwise.
func (o *ContentMeshMetadata) GetCentroid() ContentVector3 {
	if o == nil || o.Centroid == nil {
		var ret ContentVector3
		return ret
	}
	return *o.Centroid
}

// GetCentroidOk returns a tuple with the Centroid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMeshMetadata) GetCentroidOk() (*ContentVector3, bool) {
	if o == nil || o.Centroid == nil {
		return nil, false
	}
	return o.Centroid, true
}

// HasCentroid returns a boolean if a field has been set.
func (o *ContentMeshMetadata) HasCentroid() bool {
	if o != nil && o.Centroid != nil {
		return true
	}

	return false
}

// SetCentroid gets a reference to the given ContentVector3 and assigns it to the Centroid field.
func (o *ContentMeshMetadata) SetCentroid(v ContentVector3) {
	o.Centroid = &v
}

// GetExtentsMin returns the ExtentsMin field value if set, zero value otherwise.
func (o *ContentMeshMetadata) GetExtentsMin() ContentVector3 {
	if o == nil || o.ExtentsMin == nil {
		var ret ContentVector3
		return ret
	}
	return *o.ExtentsMin
}

// GetExtentsMinOk returns a tuple with the ExtentsMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMeshMetadata) GetExtentsMinOk() (*ContentVector3, bool) {
	if o == nil || o.ExtentsMin == nil {
		return nil, false
	}
	return o.ExtentsMin, true
}

// HasExtentsMin returns a boolean if a field has been set.
func (o *ContentMeshMetadata) HasExtentsMin() bool {
	if o != nil && o.ExtentsMin != nil {
		return true
	}

	return false
}

// SetExtentsMin gets a reference to the given ContentVector3 and assigns it to the ExtentsMin field.
func (o *ContentMeshMetadata) SetExtentsMin(v ContentVector3) {
	o.ExtentsMin = &v
}

// GetExtentsMax returns the ExtentsMax field value if set, zero value otherwise.
func (o *ContentMeshMetadata) GetExtentsMax() ContentVector3 {
	if o == nil || o.ExtentsMax == nil {
		var ret ContentVector3
		return ret
	}
	return *o.ExtentsMax
}

// GetExtentsMaxOk returns a tuple with the ExtentsMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentMeshMetadata) GetExtentsMaxOk() (*ContentVector3, bool) {
	if o == nil || o.ExtentsMax == nil {
		return nil, false
	}
	return o.ExtentsMax, true
}

// HasExtentsMax returns a boolean if a field has been set.
func (o *ContentMeshMetadata) HasExtentsMax() bool {
	if o != nil && o.ExtentsMax != nil {
		return true
	}

	return false
}

// SetExtentsMax gets a reference to the given ContentVector3 and assigns it to the ExtentsMax field.
func (o *ContentMeshMetadata) SetExtentsMax(v ContentVector3) {
	o.ExtentsMax = &v
}

func (o ContentMeshMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NVertices != nil {
		toSerialize["nVertices"] = o.NVertices
	}
	if o.NTriangles != nil {
		toSerialize["nTriangles"] = o.NTriangles
	}
	if o.Centroid != nil {
		toSerialize["centroid"] = o.Centroid
	}
	if o.ExtentsMin != nil {
		toSerialize["extentsMin"] = o.ExtentsMin
	}
	if o.ExtentsMax != nil {
		toSerialize["extentsMax"] = o.ExtentsMax
	}
	return json.Marshal(toSerialize)
}

type NullableContentMeshMetadata struct {
	value *ContentMeshMetadata
	isSet bool
}

func (v NullableContentMeshMetadata) Get() *ContentMeshMetadata {
	return v.value
}

func (v *NullableContentMeshMetadata) Set(val *ContentMeshMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableContentMeshMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableContentMeshMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentMeshMetadata(val *ContentMeshMetadata) *NullableContentMeshMetadata {
	return &NullableContentMeshMetadata{value: val, isSet: true}
}

func (v NullableContentMeshMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentMeshMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


