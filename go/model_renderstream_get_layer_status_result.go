/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamGetLayerStatusResult struct for RenderstreamGetLayerStatusResult
type RenderstreamGetLayerStatusResult struct {
	Reference *RenderstreamReferenceInfo `json:"reference,omitempty"`
	Workload *RenderstreamWorkloadInfo `json:"workload,omitempty"`
	Streams *[]RenderstreamStreamInfo `json:"streams,omitempty"`
	AssetErrors *[]string `json:"assetErrors,omitempty"`
}

// NewRenderstreamGetLayerStatusResult instantiates a new RenderstreamGetLayerStatusResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamGetLayerStatusResult() *RenderstreamGetLayerStatusResult {
	this := RenderstreamGetLayerStatusResult{}
	return &this
}

// NewRenderstreamGetLayerStatusResultWithDefaults instantiates a new RenderstreamGetLayerStatusResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamGetLayerStatusResultWithDefaults() *RenderstreamGetLayerStatusResult {
	this := RenderstreamGetLayerStatusResult{}
	return &this
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *RenderstreamGetLayerStatusResult) GetReference() RenderstreamReferenceInfo {
	if o == nil || o.Reference == nil {
		var ret RenderstreamReferenceInfo
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerStatusResult) GetReferenceOk() (*RenderstreamReferenceInfo, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *RenderstreamGetLayerStatusResult) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given RenderstreamReferenceInfo and assigns it to the Reference field.
func (o *RenderstreamGetLayerStatusResult) SetReference(v RenderstreamReferenceInfo) {
	o.Reference = &v
}

// GetWorkload returns the Workload field value if set, zero value otherwise.
func (o *RenderstreamGetLayerStatusResult) GetWorkload() RenderstreamWorkloadInfo {
	if o == nil || o.Workload == nil {
		var ret RenderstreamWorkloadInfo
		return ret
	}
	return *o.Workload
}

// GetWorkloadOk returns a tuple with the Workload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerStatusResult) GetWorkloadOk() (*RenderstreamWorkloadInfo, bool) {
	if o == nil || o.Workload == nil {
		return nil, false
	}
	return o.Workload, true
}

// HasWorkload returns a boolean if a field has been set.
func (o *RenderstreamGetLayerStatusResult) HasWorkload() bool {
	if o != nil && o.Workload != nil {
		return true
	}

	return false
}

// SetWorkload gets a reference to the given RenderstreamWorkloadInfo and assigns it to the Workload field.
func (o *RenderstreamGetLayerStatusResult) SetWorkload(v RenderstreamWorkloadInfo) {
	o.Workload = &v
}

// GetStreams returns the Streams field value if set, zero value otherwise.
func (o *RenderstreamGetLayerStatusResult) GetStreams() []RenderstreamStreamInfo {
	if o == nil || o.Streams == nil {
		var ret []RenderstreamStreamInfo
		return ret
	}
	return *o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerStatusResult) GetStreamsOk() (*[]RenderstreamStreamInfo, bool) {
	if o == nil || o.Streams == nil {
		return nil, false
	}
	return o.Streams, true
}

// HasStreams returns a boolean if a field has been set.
func (o *RenderstreamGetLayerStatusResult) HasStreams() bool {
	if o != nil && o.Streams != nil {
		return true
	}

	return false
}

// SetStreams gets a reference to the given []RenderstreamStreamInfo and assigns it to the Streams field.
func (o *RenderstreamGetLayerStatusResult) SetStreams(v []RenderstreamStreamInfo) {
	o.Streams = &v
}

// GetAssetErrors returns the AssetErrors field value if set, zero value otherwise.
func (o *RenderstreamGetLayerStatusResult) GetAssetErrors() []string {
	if o == nil || o.AssetErrors == nil {
		var ret []string
		return ret
	}
	return *o.AssetErrors
}

// GetAssetErrorsOk returns a tuple with the AssetErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamGetLayerStatusResult) GetAssetErrorsOk() (*[]string, bool) {
	if o == nil || o.AssetErrors == nil {
		return nil, false
	}
	return o.AssetErrors, true
}

// HasAssetErrors returns a boolean if a field has been set.
func (o *RenderstreamGetLayerStatusResult) HasAssetErrors() bool {
	if o != nil && o.AssetErrors != nil {
		return true
	}

	return false
}

// SetAssetErrors gets a reference to the given []string and assigns it to the AssetErrors field.
func (o *RenderstreamGetLayerStatusResult) SetAssetErrors(v []string) {
	o.AssetErrors = &v
}

func (o RenderstreamGetLayerStatusResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.Workload != nil {
		toSerialize["workload"] = o.Workload
	}
	if o.Streams != nil {
		toSerialize["streams"] = o.Streams
	}
	if o.AssetErrors != nil {
		toSerialize["assetErrors"] = o.AssetErrors
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamGetLayerStatusResult struct {
	value *RenderstreamGetLayerStatusResult
	isSet bool
}

func (v NullableRenderstreamGetLayerStatusResult) Get() *RenderstreamGetLayerStatusResult {
	return v.value
}

func (v *NullableRenderstreamGetLayerStatusResult) Set(val *RenderstreamGetLayerStatusResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamGetLayerStatusResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamGetLayerStatusResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamGetLayerStatusResult(val *RenderstreamGetLayerStatusResult) *NullableRenderstreamGetLayerStatusResult {
	return &NullableRenderstreamGetLayerStatusResult{value: val, isSet: true}
}

func (v NullableRenderstreamGetLayerStatusResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamGetLayerStatusResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


