/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SequencingListAvailableResourcesResponse struct for SequencingListAvailableResourcesResponse
type SequencingListAvailableResourcesResponse struct {
	Status *RpcStatus `json:"status,omitempty"`
	Result *[]SequencingIndirectionResource `json:"result,omitempty"`
}

// NewSequencingListAvailableResourcesResponse instantiates a new SequencingListAvailableResourcesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSequencingListAvailableResourcesResponse() *SequencingListAvailableResourcesResponse {
	this := SequencingListAvailableResourcesResponse{}
	return &this
}

// NewSequencingListAvailableResourcesResponseWithDefaults instantiates a new SequencingListAvailableResourcesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSequencingListAvailableResourcesResponseWithDefaults() *SequencingListAvailableResourcesResponse {
	this := SequencingListAvailableResourcesResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SequencingListAvailableResourcesResponse) GetStatus() RpcStatus {
	if o == nil || o.Status == nil {
		var ret RpcStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SequencingListAvailableResourcesResponse) GetStatusOk() (*RpcStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SequencingListAvailableResourcesResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given RpcStatus and assigns it to the Status field.
func (o *SequencingListAvailableResourcesResponse) SetStatus(v RpcStatus) {
	o.Status = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *SequencingListAvailableResourcesResponse) GetResult() []SequencingIndirectionResource {
	if o == nil || o.Result == nil {
		var ret []SequencingIndirectionResource
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SequencingListAvailableResourcesResponse) GetResultOk() (*[]SequencingIndirectionResource, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *SequencingListAvailableResourcesResponse) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given []SequencingIndirectionResource and assigns it to the Result field.
func (o *SequencingListAvailableResourcesResponse) SetResult(v []SequencingIndirectionResource) {
	o.Result = &v
}

func (o SequencingListAvailableResourcesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableSequencingListAvailableResourcesResponse struct {
	value *SequencingListAvailableResourcesResponse
	isSet bool
}

func (v NullableSequencingListAvailableResourcesResponse) Get() *SequencingListAvailableResourcesResponse {
	return v.value
}

func (v *NullableSequencingListAvailableResourcesResponse) Set(val *SequencingListAvailableResourcesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSequencingListAvailableResourcesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSequencingListAvailableResourcesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSequencingListAvailableResourcesResponse(val *SequencingListAvailableResourcesResponse) *NullableSequencingListAvailableResourcesResponse {
	return &NullableSequencingListAvailableResourcesResponse{value: val, isSet: true}
}

func (v NullableSequencingListAvailableResourcesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSequencingListAvailableResourcesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


