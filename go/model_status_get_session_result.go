/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatusGetSessionResult struct for StatusGetSessionResult
type StatusGetSessionResult struct {
	// Is machine is running in the solo mode. Solo mode means that project is running on a standalone machine (not director set), so not as part of a wider session.
	IsRunningSolo *bool `json:"isRunningSolo,omitempty"`
	// Is a director machine is set as dedicated or not Dedicated means that the machine controls Actors but is not intended to output video to the stage; it is used only for visualisation. It if is not dedicated then that means the machine controls all other Actors in the network but also outputs video through its remaining outputs.
	IsDirectorDedicated *bool `json:"isDirectorDedicated,omitempty"`
	Director *StatusMachineInfo `json:"director,omitempty"`
	Actors *[]StatusMachineInfo `json:"actors,omitempty"`
	Understudies *[]StatusMachineInfo `json:"understudies,omitempty"`
}

// NewStatusGetSessionResult instantiates a new StatusGetSessionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusGetSessionResult() *StatusGetSessionResult {
	this := StatusGetSessionResult{}
	return &this
}

// NewStatusGetSessionResultWithDefaults instantiates a new StatusGetSessionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusGetSessionResultWithDefaults() *StatusGetSessionResult {
	this := StatusGetSessionResult{}
	return &this
}

// GetIsRunningSolo returns the IsRunningSolo field value if set, zero value otherwise.
func (o *StatusGetSessionResult) GetIsRunningSolo() bool {
	if o == nil || o.IsRunningSolo == nil {
		var ret bool
		return ret
	}
	return *o.IsRunningSolo
}

// GetIsRunningSoloOk returns a tuple with the IsRunningSolo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGetSessionResult) GetIsRunningSoloOk() (*bool, bool) {
	if o == nil || o.IsRunningSolo == nil {
		return nil, false
	}
	return o.IsRunningSolo, true
}

// HasIsRunningSolo returns a boolean if a field has been set.
func (o *StatusGetSessionResult) HasIsRunningSolo() bool {
	if o != nil && o.IsRunningSolo != nil {
		return true
	}

	return false
}

// SetIsRunningSolo gets a reference to the given bool and assigns it to the IsRunningSolo field.
func (o *StatusGetSessionResult) SetIsRunningSolo(v bool) {
	o.IsRunningSolo = &v
}

// GetIsDirectorDedicated returns the IsDirectorDedicated field value if set, zero value otherwise.
func (o *StatusGetSessionResult) GetIsDirectorDedicated() bool {
	if o == nil || o.IsDirectorDedicated == nil {
		var ret bool
		return ret
	}
	return *o.IsDirectorDedicated
}

// GetIsDirectorDedicatedOk returns a tuple with the IsDirectorDedicated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGetSessionResult) GetIsDirectorDedicatedOk() (*bool, bool) {
	if o == nil || o.IsDirectorDedicated == nil {
		return nil, false
	}
	return o.IsDirectorDedicated, true
}

// HasIsDirectorDedicated returns a boolean if a field has been set.
func (o *StatusGetSessionResult) HasIsDirectorDedicated() bool {
	if o != nil && o.IsDirectorDedicated != nil {
		return true
	}

	return false
}

// SetIsDirectorDedicated gets a reference to the given bool and assigns it to the IsDirectorDedicated field.
func (o *StatusGetSessionResult) SetIsDirectorDedicated(v bool) {
	o.IsDirectorDedicated = &v
}

// GetDirector returns the Director field value if set, zero value otherwise.
func (o *StatusGetSessionResult) GetDirector() StatusMachineInfo {
	if o == nil || o.Director == nil {
		var ret StatusMachineInfo
		return ret
	}
	return *o.Director
}

// GetDirectorOk returns a tuple with the Director field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGetSessionResult) GetDirectorOk() (*StatusMachineInfo, bool) {
	if o == nil || o.Director == nil {
		return nil, false
	}
	return o.Director, true
}

// HasDirector returns a boolean if a field has been set.
func (o *StatusGetSessionResult) HasDirector() bool {
	if o != nil && o.Director != nil {
		return true
	}

	return false
}

// SetDirector gets a reference to the given StatusMachineInfo and assigns it to the Director field.
func (o *StatusGetSessionResult) SetDirector(v StatusMachineInfo) {
	o.Director = &v
}

// GetActors returns the Actors field value if set, zero value otherwise.
func (o *StatusGetSessionResult) GetActors() []StatusMachineInfo {
	if o == nil || o.Actors == nil {
		var ret []StatusMachineInfo
		return ret
	}
	return *o.Actors
}

// GetActorsOk returns a tuple with the Actors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGetSessionResult) GetActorsOk() (*[]StatusMachineInfo, bool) {
	if o == nil || o.Actors == nil {
		return nil, false
	}
	return o.Actors, true
}

// HasActors returns a boolean if a field has been set.
func (o *StatusGetSessionResult) HasActors() bool {
	if o != nil && o.Actors != nil {
		return true
	}

	return false
}

// SetActors gets a reference to the given []StatusMachineInfo and assigns it to the Actors field.
func (o *StatusGetSessionResult) SetActors(v []StatusMachineInfo) {
	o.Actors = &v
}

// GetUnderstudies returns the Understudies field value if set, zero value otherwise.
func (o *StatusGetSessionResult) GetUnderstudies() []StatusMachineInfo {
	if o == nil || o.Understudies == nil {
		var ret []StatusMachineInfo
		return ret
	}
	return *o.Understudies
}

// GetUnderstudiesOk returns a tuple with the Understudies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGetSessionResult) GetUnderstudiesOk() (*[]StatusMachineInfo, bool) {
	if o == nil || o.Understudies == nil {
		return nil, false
	}
	return o.Understudies, true
}

// HasUnderstudies returns a boolean if a field has been set.
func (o *StatusGetSessionResult) HasUnderstudies() bool {
	if o != nil && o.Understudies != nil {
		return true
	}

	return false
}

// SetUnderstudies gets a reference to the given []StatusMachineInfo and assigns it to the Understudies field.
func (o *StatusGetSessionResult) SetUnderstudies(v []StatusMachineInfo) {
	o.Understudies = &v
}

func (o StatusGetSessionResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsRunningSolo != nil {
		toSerialize["isRunningSolo"] = o.IsRunningSolo
	}
	if o.IsDirectorDedicated != nil {
		toSerialize["isDirectorDedicated"] = o.IsDirectorDedicated
	}
	if o.Director != nil {
		toSerialize["director"] = o.Director
	}
	if o.Actors != nil {
		toSerialize["actors"] = o.Actors
	}
	if o.Understudies != nil {
		toSerialize["understudies"] = o.Understudies
	}
	return json.Marshal(toSerialize)
}

type NullableStatusGetSessionResult struct {
	value *StatusGetSessionResult
	isSet bool
}

func (v NullableStatusGetSessionResult) Get() *StatusGetSessionResult {
	return v.value
}

func (v *NullableStatusGetSessionResult) Set(val *StatusGetSessionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusGetSessionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusGetSessionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusGetSessionResult(val *StatusGetSessionResult) *NullableStatusGetSessionResult {
	return &NullableStatusGetSessionResult{value: val, isSet: true}
}

func (v NullableStatusGetSessionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusGetSessionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


