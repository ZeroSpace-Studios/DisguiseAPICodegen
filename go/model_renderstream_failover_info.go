/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenderstreamFailoverInfo struct for RenderstreamFailoverInfo
type RenderstreamFailoverInfo struct {
	WorkloadID *string `json:"workloadID,omitempty"`
	FailedInstanceIndex *int64 `json:"failedInstanceIndex,omitempty"`
	CoveringInstanceIndex *int64 `json:"coveringInstanceIndex,omitempty"`
	CoveringMachineName *string `json:"coveringMachineName,omitempty"`
	ErrorString *string `json:"errorString,omitempty"`
	Streams *[]RenderstreamStreamInfo `json:"streams,omitempty"`
}

// NewRenderstreamFailoverInfo instantiates a new RenderstreamFailoverInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderstreamFailoverInfo() *RenderstreamFailoverInfo {
	this := RenderstreamFailoverInfo{}
	return &this
}

// NewRenderstreamFailoverInfoWithDefaults instantiates a new RenderstreamFailoverInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderstreamFailoverInfoWithDefaults() *RenderstreamFailoverInfo {
	this := RenderstreamFailoverInfo{}
	return &this
}

// GetWorkloadID returns the WorkloadID field value if set, zero value otherwise.
func (o *RenderstreamFailoverInfo) GetWorkloadID() string {
	if o == nil || o.WorkloadID == nil {
		var ret string
		return ret
	}
	return *o.WorkloadID
}

// GetWorkloadIDOk returns a tuple with the WorkloadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverInfo) GetWorkloadIDOk() (*string, bool) {
	if o == nil || o.WorkloadID == nil {
		return nil, false
	}
	return o.WorkloadID, true
}

// HasWorkloadID returns a boolean if a field has been set.
func (o *RenderstreamFailoverInfo) HasWorkloadID() bool {
	if o != nil && o.WorkloadID != nil {
		return true
	}

	return false
}

// SetWorkloadID gets a reference to the given string and assigns it to the WorkloadID field.
func (o *RenderstreamFailoverInfo) SetWorkloadID(v string) {
	o.WorkloadID = &v
}

// GetFailedInstanceIndex returns the FailedInstanceIndex field value if set, zero value otherwise.
func (o *RenderstreamFailoverInfo) GetFailedInstanceIndex() int64 {
	if o == nil || o.FailedInstanceIndex == nil {
		var ret int64
		return ret
	}
	return *o.FailedInstanceIndex
}

// GetFailedInstanceIndexOk returns a tuple with the FailedInstanceIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverInfo) GetFailedInstanceIndexOk() (*int64, bool) {
	if o == nil || o.FailedInstanceIndex == nil {
		return nil, false
	}
	return o.FailedInstanceIndex, true
}

// HasFailedInstanceIndex returns a boolean if a field has been set.
func (o *RenderstreamFailoverInfo) HasFailedInstanceIndex() bool {
	if o != nil && o.FailedInstanceIndex != nil {
		return true
	}

	return false
}

// SetFailedInstanceIndex gets a reference to the given int64 and assigns it to the FailedInstanceIndex field.
func (o *RenderstreamFailoverInfo) SetFailedInstanceIndex(v int64) {
	o.FailedInstanceIndex = &v
}

// GetCoveringInstanceIndex returns the CoveringInstanceIndex field value if set, zero value otherwise.
func (o *RenderstreamFailoverInfo) GetCoveringInstanceIndex() int64 {
	if o == nil || o.CoveringInstanceIndex == nil {
		var ret int64
		return ret
	}
	return *o.CoveringInstanceIndex
}

// GetCoveringInstanceIndexOk returns a tuple with the CoveringInstanceIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverInfo) GetCoveringInstanceIndexOk() (*int64, bool) {
	if o == nil || o.CoveringInstanceIndex == nil {
		return nil, false
	}
	return o.CoveringInstanceIndex, true
}

// HasCoveringInstanceIndex returns a boolean if a field has been set.
func (o *RenderstreamFailoverInfo) HasCoveringInstanceIndex() bool {
	if o != nil && o.CoveringInstanceIndex != nil {
		return true
	}

	return false
}

// SetCoveringInstanceIndex gets a reference to the given int64 and assigns it to the CoveringInstanceIndex field.
func (o *RenderstreamFailoverInfo) SetCoveringInstanceIndex(v int64) {
	o.CoveringInstanceIndex = &v
}

// GetCoveringMachineName returns the CoveringMachineName field value if set, zero value otherwise.
func (o *RenderstreamFailoverInfo) GetCoveringMachineName() string {
	if o == nil || o.CoveringMachineName == nil {
		var ret string
		return ret
	}
	return *o.CoveringMachineName
}

// GetCoveringMachineNameOk returns a tuple with the CoveringMachineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverInfo) GetCoveringMachineNameOk() (*string, bool) {
	if o == nil || o.CoveringMachineName == nil {
		return nil, false
	}
	return o.CoveringMachineName, true
}

// HasCoveringMachineName returns a boolean if a field has been set.
func (o *RenderstreamFailoverInfo) HasCoveringMachineName() bool {
	if o != nil && o.CoveringMachineName != nil {
		return true
	}

	return false
}

// SetCoveringMachineName gets a reference to the given string and assigns it to the CoveringMachineName field.
func (o *RenderstreamFailoverInfo) SetCoveringMachineName(v string) {
	o.CoveringMachineName = &v
}

// GetErrorString returns the ErrorString field value if set, zero value otherwise.
func (o *RenderstreamFailoverInfo) GetErrorString() string {
	if o == nil || o.ErrorString == nil {
		var ret string
		return ret
	}
	return *o.ErrorString
}

// GetErrorStringOk returns a tuple with the ErrorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverInfo) GetErrorStringOk() (*string, bool) {
	if o == nil || o.ErrorString == nil {
		return nil, false
	}
	return o.ErrorString, true
}

// HasErrorString returns a boolean if a field has been set.
func (o *RenderstreamFailoverInfo) HasErrorString() bool {
	if o != nil && o.ErrorString != nil {
		return true
	}

	return false
}

// SetErrorString gets a reference to the given string and assigns it to the ErrorString field.
func (o *RenderstreamFailoverInfo) SetErrorString(v string) {
	o.ErrorString = &v
}

// GetStreams returns the Streams field value if set, zero value otherwise.
func (o *RenderstreamFailoverInfo) GetStreams() []RenderstreamStreamInfo {
	if o == nil || o.Streams == nil {
		var ret []RenderstreamStreamInfo
		return ret
	}
	return *o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderstreamFailoverInfo) GetStreamsOk() (*[]RenderstreamStreamInfo, bool) {
	if o == nil || o.Streams == nil {
		return nil, false
	}
	return o.Streams, true
}

// HasStreams returns a boolean if a field has been set.
func (o *RenderstreamFailoverInfo) HasStreams() bool {
	if o != nil && o.Streams != nil {
		return true
	}

	return false
}

// SetStreams gets a reference to the given []RenderstreamStreamInfo and assigns it to the Streams field.
func (o *RenderstreamFailoverInfo) SetStreams(v []RenderstreamStreamInfo) {
	o.Streams = &v
}

func (o RenderstreamFailoverInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WorkloadID != nil {
		toSerialize["workloadID"] = o.WorkloadID
	}
	if o.FailedInstanceIndex != nil {
		toSerialize["failedInstanceIndex"] = o.FailedInstanceIndex
	}
	if o.CoveringInstanceIndex != nil {
		toSerialize["coveringInstanceIndex"] = o.CoveringInstanceIndex
	}
	if o.CoveringMachineName != nil {
		toSerialize["coveringMachineName"] = o.CoveringMachineName
	}
	if o.ErrorString != nil {
		toSerialize["errorString"] = o.ErrorString
	}
	if o.Streams != nil {
		toSerialize["streams"] = o.Streams
	}
	return json.Marshal(toSerialize)
}

type NullableRenderstreamFailoverInfo struct {
	value *RenderstreamFailoverInfo
	isSet bool
}

func (v NullableRenderstreamFailoverInfo) Get() *RenderstreamFailoverInfo {
	return v.value
}

func (v *NullableRenderstreamFailoverInfo) Set(val *RenderstreamFailoverInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderstreamFailoverInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderstreamFailoverInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderstreamFailoverInfo(val *RenderstreamFailoverInfo) *NullableRenderstreamFailoverInfo {
	return &NullableRenderstreamFailoverInfo{value: val, isSet: true}
}

func (v NullableRenderstreamFailoverInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderstreamFailoverInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


