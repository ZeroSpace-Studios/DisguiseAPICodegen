/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransportTagInfo struct for TransportTagInfo
type TransportTagInfo struct {
	Time *float64 `json:"time,omitempty"`
	Type *TransportTagType `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewTransportTagInfo instantiates a new TransportTagInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportTagInfo() *TransportTagInfo {
	this := TransportTagInfo{}
	var type_ TransportTagType = TAG_TYPE_UNKNOWN
	this.Type = &type_
	return &this
}

// NewTransportTagInfoWithDefaults instantiates a new TransportTagInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportTagInfoWithDefaults() *TransportTagInfo {
	this := TransportTagInfo{}
	var type_ TransportTagType = TAG_TYPE_UNKNOWN
	this.Type = &type_
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *TransportTagInfo) GetTime() float64 {
	if o == nil || o.Time == nil {
		var ret float64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportTagInfo) GetTimeOk() (*float64, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *TransportTagInfo) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given float64 and assigns it to the Time field.
func (o *TransportTagInfo) SetTime(v float64) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransportTagInfo) GetType() TransportTagType {
	if o == nil || o.Type == nil {
		var ret TransportTagType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportTagInfo) GetTypeOk() (*TransportTagType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransportTagInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given TransportTagType and assigns it to the Type field.
func (o *TransportTagInfo) SetType(v TransportTagType) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TransportTagInfo) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportTagInfo) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TransportTagInfo) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TransportTagInfo) SetValue(v string) {
	o.Value = &v
}

func (o TransportTagInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableTransportTagInfo struct {
	value *TransportTagInfo
	isSet bool
}

func (v NullableTransportTagInfo) Get() *TransportTagInfo {
	return v.value
}

func (v *NullableTransportTagInfo) Set(val *TransportTagInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportTagInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportTagInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportTagInfo(val *TransportTagInfo) *NullableTransportTagInfo {
	return &NullableTransportTagInfo{value: val, isSet: true}
}

func (v NullableTransportTagInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportTagInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


