/*
d3 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransportSetBrightnessInfo struct for TransportSetBrightnessInfo
type TransportSetBrightnessInfo struct {
	Transport *D3apiLocator `json:"transport,omitempty"`
	Brightness *float64 `json:"brightness,omitempty"`
}

// NewTransportSetBrightnessInfo instantiates a new TransportSetBrightnessInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportSetBrightnessInfo() *TransportSetBrightnessInfo {
	this := TransportSetBrightnessInfo{}
	return &this
}

// NewTransportSetBrightnessInfoWithDefaults instantiates a new TransportSetBrightnessInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportSetBrightnessInfoWithDefaults() *TransportSetBrightnessInfo {
	this := TransportSetBrightnessInfo{}
	return &this
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *TransportSetBrightnessInfo) GetTransport() D3apiLocator {
	if o == nil || o.Transport == nil {
		var ret D3apiLocator
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportSetBrightnessInfo) GetTransportOk() (*D3apiLocator, bool) {
	if o == nil || o.Transport == nil {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *TransportSetBrightnessInfo) HasTransport() bool {
	if o != nil && o.Transport != nil {
		return true
	}

	return false
}

// SetTransport gets a reference to the given D3apiLocator and assigns it to the Transport field.
func (o *TransportSetBrightnessInfo) SetTransport(v D3apiLocator) {
	o.Transport = &v
}

// GetBrightness returns the Brightness field value if set, zero value otherwise.
func (o *TransportSetBrightnessInfo) GetBrightness() float64 {
	if o == nil || o.Brightness == nil {
		var ret float64
		return ret
	}
	return *o.Brightness
}

// GetBrightnessOk returns a tuple with the Brightness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportSetBrightnessInfo) GetBrightnessOk() (*float64, bool) {
	if o == nil || o.Brightness == nil {
		return nil, false
	}
	return o.Brightness, true
}

// HasBrightness returns a boolean if a field has been set.
func (o *TransportSetBrightnessInfo) HasBrightness() bool {
	if o != nil && o.Brightness != nil {
		return true
	}

	return false
}

// SetBrightness gets a reference to the given float64 and assigns it to the Brightness field.
func (o *TransportSetBrightnessInfo) SetBrightness(v float64) {
	o.Brightness = &v
}

func (o TransportSetBrightnessInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Transport != nil {
		toSerialize["transport"] = o.Transport
	}
	if o.Brightness != nil {
		toSerialize["brightness"] = o.Brightness
	}
	return json.Marshal(toSerialize)
}

type NullableTransportSetBrightnessInfo struct {
	value *TransportSetBrightnessInfo
	isSet bool
}

func (v NullableTransportSetBrightnessInfo) Get() *TransportSetBrightnessInfo {
	return v.value
}

func (v *NullableTransportSetBrightnessInfo) Set(val *TransportSetBrightnessInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportSetBrightnessInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportSetBrightnessInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportSetBrightnessInfo(val *TransportSetBrightnessInfo) *NullableTransportSetBrightnessInfo {
	return &NullableTransportSetBrightnessInfo{value: val, isSet: true}
}

func (v NullableTransportSetBrightnessInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportSetBrightnessInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


